{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","shared/store/actions.ts","shared/utils/randomColor.ts","shared/utils/exampleData.ts","types/store.ts","shared/store/selectedChart/actions.ts","shared/store/chartStyle/actions.ts","shared/store/dataSet1/actions.ts","shared/store/dataSet2/actions.ts","shared/store/dataSet3/actions.ts","shared/store/dataSet4/actions.ts","shared/store/selectedChart/reducer.ts","shared/store/chartStyle/reducer.ts","shared/utils/convertions.ts","shared/utils/newLabel.ts","shared/store/dataSet1/reducer.ts","shared/store/dataSet2/reducer.ts","shared/store/dataSet3/reducer.ts","shared/store/dataSet4/reducer.ts","shared/store/reducer.ts","shared/store/index.tsx","shared/components/Button/index.tsx","shared/constants/chartsList.ts","ChartEditor/ChartHeader/index.tsx","shared/utils/downloadCanvas.ts","shared/components/Icon/index.tsx","shared/components/Input/index.tsx","shared/components/EditableText/index.tsx","shared/components/DataSetInput/layouts/LeftSide1.tsx","shared/components/Modal/index.tsx","shared/hooks/useModal.tsx","shared/components/ColorPicker/index.tsx","shared/components/DataSetInput/layouts/RightSide1.tsx","shared/components/DataSetInput/layouts/Container.tsx","shared/components/DataSetInput/DataSet1.tsx","shared/components/DataSetInput/DataSet2.tsx","shared/components/DataSetInput/layouts/LeftSide2.tsx","shared/components/DataSetInput/DataSet4.tsx","ChartEditor/ChartInputs/setups.tsx","shared/hooks/useSelectInput.tsx","ChartEditor/ChartInputs/index.tsx","shared/utils/chartAdapters/adapter3.ts","shared/utils/chartAdapters/adapter4.ts","shared/utils/chartAdapters/index.ts","shared/utils/chartAdapters/adapter1.ts","shared/utils/chartAdapters/adapter2.ts","shared/utils/chartAdapters/minAndMaxBar.ts","shared/hooks/useSelectChart.tsx","ChartEditor/ChartVisualize/index.tsx","assets/images/Logo.svg","ChartEditor/index.tsx","ChartList/ChartSelector/index.tsx","ChartList/index.tsx","app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","EAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","randomColor","Math","floor","random","toString","genRandomNumbers","amount","returnValue","raw","array","i","randomNumber","push","RandomDataset","type","valueForDataset1","label","color","valueForDataset2","dataset2","valueForDataset4","x","y","rawX","arrayX","rawY","arrayY","initialState","selectedChart","chartStyle","dataSet1","dataSet2","dataSet3","dataSet4","set","index","SELECTEDCHART_SET","payload","CHARTSTYLE_SET","clear","DATASET1_CLEAR","add","DATASET1_ADD","remove","DATASET1_REMOVE","setLabel","data","DATASET1_SET_LABEL","setRaw","DATASET1_SET_RAW","setColor","DATASET1_SET_COLOR","DATASET2_CLEAR","DATASET2_ADD","DATASET2_REMOVE","DATASET2_SET_LABEL","setValue","DATASET2_SET_VALUE","DATASET2_SET_COLOR","DATASET3_SET_LABEL","DATASET3_SET_RAW","DATASET3_SET_COLOR","DATASET4_CLEAR","DATASET4_ADD","DATASET4_REMOVE","DATASET4_SET_LABEL","setRawX","DATASET4_SET_RAWX","setRawY","DATASET4_SET_RAWY","DATASET4_SET_COLOR","Actions","Reducer","state","action","textToArray","input","sanitizedInput","length","val","isNaN","Number","splitedText","split","candidateNumber","sanitizeText","letters","newLabel","clone","slice","concat","includes","DATASET3_CLEAR","RootReducer","Context","createContext","Store","props","useReducer","dispatch","Provider","value","children","Button","style","margin","m","marginRight","mr","marginLeft","ml","marginBottom","mb","marginTop","mt","className","onClick","charList","icon","name","ChartHeader","useContext","link","document","createElement","download","Date","now","href","getElementsByTagName","toDataURL","click","DonwloadCanvas","Icon","useState","setIcon","useEffect","a","default","dinamicImport","alt","src","Input","width","w","placeholder","onChange","EditableText","editing","setEditing","tempText","setTempText","handleSwitchEditingMode","e","target","DataSetInputLeftSide1","handleOnChangeLabel","handleOnChangeInput","Modal","title","onClose","useModal","content","isOpen","setIsOpen","closeModal","openModal","ModalWrapper","ColorPicker","event","handleOnChangeColor","hex","border","height","backgroundColor","DataSetInputRightSide","handleOnDeleteDataset","Container","DataSet1Input","dispatcher","DataSet2Input","DataSetInputLeftSide2","DataSet4Input","PlotInputs","map","dataset","DataSet1","ScatterInputs","DataSet4","BarPieInputs","DataSet2","useSelectInput","setInput","ChartInputs","InputComponent","adapter3","labels","colors","forEach","datasets","hoverOffset","createPoints","xvalue","ChartAdapters","Line","amountOfLabels","fill","borderColor","tension","Bar","adapter","borderWidth","scale","min","max","stepSize","Pie","Doughnut","ScatterPlot","dataArray","Histogram","useSelectChart","chart","setChart","options","scales","yAxes","ticks","legend","display","ChartVisualize","Chart","ChartEditor","logo","ChartSelector","ChartList","App","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9bf69a0f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { selectedChart } from \"./selectedChart/actions\";\r\nimport { chartStyle } from \"./chartStyle/actions\";\r\nimport { dataSet1 } from \"./dataSet1/actions\";\r\nimport { dataSet2 } from \"./dataSet2/actions\";\r\nimport { dataSet3 } from \"./dataSet3/actions\";\r\nimport { dataSet4 } from \"./dataSet4/actions\";\r\n\r\nexport enum EAction {\r\n\tSELECTEDCHART_SET,\r\n\r\n\tCHARTSTYLE_SET,\r\n\r\n\tDATASET_CLEAR,\r\n\r\n\tDATASET1_CLEAR,\r\n\tDATASET1_ADD,\r\n\tDATASET1_REMOVE,\r\n\tDATASET1_SET_LABEL,\r\n\tDATASET1_SET_RAW,\r\n\tDATASET1_SET_COLOR,\r\n\r\n\tDATASET2_CLEAR,\r\n\tDATASET2_ADD,\r\n\tDATASET2_REMOVE,\r\n\tDATASET2_SET_LABEL,\r\n\tDATASET2_SET_VALUE,\r\n\tDATASET2_SET_COLOR,\r\n\r\n\tDATASET3_CLEAR,\r\n\tDATASET3_SET_LABEL,\r\n\tDATASET3_SET_RAW,\r\n\tDATASET3_SET_COLOR,\r\n\r\n\tDATASET4_CLEAR,\r\n\tDATASET4_ADD,\r\n\tDATASET4_REMOVE,\r\n\tDATASET4_SET_LABEL,\r\n\tDATASET4_SET_RAWX,\r\n\tDATASET4_SET_RAWY,\r\n\tDATASET4_SET_COLOR,\r\n}\r\n\r\ninterface IndexedPayload<T> {\r\n\tindex: number;\r\n\tdata: T;\r\n}\r\n\r\nexport type Action =\r\n\t| { type: EAction.SELECTEDCHART_SET; payload: number }\r\n\t| { type: EAction.CHARTSTYLE_SET; payload: number }\r\n\t| { type: EAction.DATASET_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET1_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET1_ADD; payload: null }\r\n\t| { type: EAction.DATASET1_REMOVE; payload: number }\r\n\t| { type: EAction.DATASET1_SET_LABEL; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET1_SET_RAW; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET1_SET_COLOR; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET2_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET2_ADD; payload: null }\r\n\t| { type: EAction.DATASET2_REMOVE; payload: number }\r\n\t| { type: EAction.DATASET2_SET_LABEL; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET2_SET_VALUE; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET2_SET_COLOR; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET3_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET3_SET_LABEL; payload: string }\r\n\t| { type: EAction.DATASET3_SET_RAW; payload: string }\r\n\t| { type: EAction.DATASET3_SET_COLOR; payload: string }\r\n\t| { type: EAction.DATASET4_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET4_ADD; payload: null }\r\n\t| { type: EAction.DATASET4_REMOVE; payload: number }\r\n\t| { type: EAction.DATASET4_SET_LABEL; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET4_SET_RAWX; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET4_SET_RAWY; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET4_SET_COLOR; payload: IndexedPayload<string> };\r\n\r\nconst Actions = {\r\n\tselectedChart,\r\n\tchartStyle,\r\n\tdataSet1,\r\n\tdataSet2,\r\n\tdataSet3,\r\n\tdataSet4,\r\n};\r\nexport default Actions;\r\n","export const randomColor = (): string =>\r\n\t\"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n","import { DataSet1, DataSet2, DataSet4 } from \"../../types/store\";\r\nimport { randomColor } from \"./randomColor\";\r\n\r\nconst genRandomNumbers = (amount: number): { raw: string; array: number[] } => {\r\n\tlet returnValue: { raw: string; array: number[] } = { raw: \"\", array: [] };\r\n\r\n\tfor (let i = 0; i <= amount; i++) {\r\n\t\tlet randomNumber = Math.floor(Math.random() * 100) + 1;\r\n\t\treturnValue.raw += randomNumber.toString() + \",\";\r\n\t\treturnValue.array.push(randomNumber);\r\n\t}\r\n\r\n\treturn returnValue;\r\n};\r\n\r\nexport const RandomDataset = (\r\n\ttype: 1 | 2 | 4\r\n): DataSet1[] | DataSet2[] | DataSet4[] => {\r\n\tswitch (type) {\r\n\t\tcase 1:\r\n\t\t\tlet valueForDataset1 = genRandomNumbers(10);\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Example\",\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\traw: valueForDataset1.raw,\r\n\t\t\t\t\tarray: valueForDataset1.array,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\tcase 2:\r\n\t\t\tlet valueForDataset2 = genRandomNumbers(3);\r\n\t\t\tlet dataset2: DataSet2[] = [];\r\n\t\t\tfor (let i = 0; i <= 2; i++) {\r\n\t\t\t\tdataset2.push({\r\n\t\t\t\t\tlabel: \"Example\" + (i + 1),\r\n\t\t\t\t\traw: valueForDataset2.array[i],\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn dataset2;\r\n\t\tcase 4:\r\n\t\t\tlet valueForDataset4 = {\r\n\t\t\t\tx: genRandomNumbers(10),\r\n\t\t\t\ty: genRandomNumbers(10),\r\n\t\t\t};\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Example\",\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\trawX: valueForDataset4.x.raw,\r\n\t\t\t\t\tarrayX: valueForDataset4.x.array,\r\n\t\t\t\t\trawY: valueForDataset4.y.raw,\r\n\t\t\t\t\tarrayY: valueForDataset4.y.array,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\r\n\t\tdefault:\r\n\t\t\treturn [];\r\n\t}\r\n};\r\n","import { RandomDataset } from \"../shared/utils/exampleData\";\r\nimport { randomColor } from \"../shared/utils/randomColor\";\r\n\r\nexport type DataSet = {\r\n\tlabel: string;\r\n\traw: string;\r\n\tarray: Array<number>;\r\n};\r\n\r\nexport type DataSet1 = {\r\n\tlabel: string;\r\n\traw: string;\r\n\tarray: Array<number>;\r\n\tcolor: string;\r\n};\r\n\r\nexport type DataSet2 = {\r\n\tlabel: string;\r\n\traw: number;\r\n\tcolor: string;\r\n};\r\n\r\nexport type DataSet3 = {\r\n\tlabel: string;\r\n\traw: string;\r\n\tarray: Array<number>;\r\n\tcolor: string;\r\n};\r\n\r\nexport type DataSet4 = {\r\n\tlabel: string;\r\n\trawX: string;\r\n\trawY: string;\r\n\tarrayX: Array<number>;\r\n\tarrayY: Array<number>;\r\n\tcolor: string;\r\n};\r\n\r\nexport type State = {\r\n\tselectedChart: number;\r\n\tchartStyle: number;\r\n\r\n\tdataSet1: Array<DataSet1>;\r\n\tdataSet2: Array<DataSet2>;\r\n\tdataSet3: DataSet3;\r\n\tdataSet4: Array<DataSet4>;\r\n};\r\n\r\nexport const initialState: State = {\r\n\tselectedChart: 0,\r\n\r\n\tchartStyle: 0,\r\n\r\n\tdataSet1: RandomDataset(1) as DataSet1[],\r\n\tdataSet2: RandomDataset(2) as DataSet2[],\r\n\tdataSet3: {\r\n\t\tlabel: \"X\",\r\n\t\traw: \"\",\r\n\t\tarray: [],\r\n\t\tcolor: randomColor(),\r\n\t},\r\n\tdataSet4: RandomDataset(4) as DataSet4[],\r\n};\r\n","import { Action, EAction } from \"../actions\";\r\n\r\nconst selectedChart = {\r\n\tset: (index: number): Action => ({\r\n\t\ttype: EAction.SELECTEDCHART_SET,\r\n\t\tpayload: index,\r\n\t}),\r\n};\r\n\r\nexport { selectedChart };\r\n","import { Action, EAction } from \"../actions\";\r\n\r\nconst chartStyle = {\r\n\tset: (index: number): Action => ({\r\n\t\ttype: EAction.CHARTSTYLE_SET,\r\n\t\tpayload: index,\r\n\t}),\r\n};\r\n\r\nexport { chartStyle };\r\n","import { Action, EAction } from \"../actions\";\r\n\r\nexport const dataSet1 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET1_CLEAR, payload: null }),\r\n\tadd: (): Action => ({ type: EAction.DATASET1_ADD, payload: null }),\r\n\tremove: (index: number): Action => ({\r\n\t\ttype: EAction.DATASET1_REMOVE,\r\n\t\tpayload: index,\r\n\t}),\r\n\tsetLabel: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET1_SET_LABEL,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetRaw: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET1_SET_RAW,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetColor: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET1_SET_COLOR,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n};\r\n","import { Action, EAction } from \"../actions\";\r\n\r\nexport const dataSet2 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET2_CLEAR, payload: null }),\r\n\tadd: (): Action => ({ type: EAction.DATASET2_ADD, payload: null }),\r\n\tremove: (index: number): Action => ({\r\n\t\ttype: EAction.DATASET2_REMOVE,\r\n\t\tpayload: index,\r\n\t}),\r\n\tsetLabel: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET2_SET_LABEL,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetValue: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET2_SET_VALUE,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetColor: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET2_SET_COLOR,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n};\r\n","import { Action, EAction } from \"../actions\";\r\n\r\nexport const dataSet3 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET2_CLEAR, payload: null }),\r\n\tsetLabel: (data: string): Action => ({\r\n\t\ttype: EAction.DATASET3_SET_LABEL,\r\n\t\tpayload: data,\r\n\t}),\r\n\tsetRaw: (data: string): Action => ({\r\n\t\ttype: EAction.DATASET3_SET_RAW,\r\n\t\tpayload: data,\r\n\t}),\r\n\tsetColor: (data: string): Action => ({\r\n\t\ttype: EAction.DATASET3_SET_COLOR,\r\n\t\tpayload: data,\r\n\t}),\r\n};\r\n","import { Action, EAction } from \"../actions\";\r\n\r\nexport const dataSet4 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET4_CLEAR, payload: null }),\r\n\tadd: (): Action => ({ type: EAction.DATASET4_ADD, payload: null }),\r\n\tremove: (index: number): Action => ({\r\n\t\ttype: EAction.DATASET4_REMOVE,\r\n\t\tpayload: index,\r\n\t}),\r\n\tsetLabel: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET4_SET_LABEL,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetRawX: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET4_SET_RAWX,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetRawY: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET4_SET_RAWY,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\r\n\tsetColor: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET4_SET_COLOR,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n};\r\n","import { DataSet2, DataSet1, DataSet4, State } from \"../../../types/store\";\r\nimport { RandomDataset } from \"../../utils/exampleData\";\r\nimport { Action, EAction } from \"../actions\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tswitch (action.type) {\r\n\t\tcase EAction.SELECTEDCHART_SET:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedChart: action.payload,\r\n\t\t\t\tdataSet1: RandomDataset(1) as DataSet1[],\r\n\t\t\t\tdataSet2: RandomDataset(2) as DataSet2[],\r\n\t\t\t\t//dataSet3: defaultData.dataSet3,\r\n\t\t\t\tdataSet4: RandomDataset(4) as DataSet4[],\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { State } from \"../../../types/store\";\r\nimport { Action, EAction } from \"../actions\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tswitch (action.type) {\r\n\t\tcase EAction.CHARTSTYLE_SET:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchartStyle: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","export const textToArray = (input: string): Array<number> => {\r\n\tlet returnValue: Array<number> = [];\r\n\r\n\t//Sanitize text\r\n\r\n\tlet sanitizedInput: string = \"\";\r\n\r\n\tfor (let i = 0; i < input.length; i++) {\r\n\t\tlet val = input[i];\r\n\t\tif (\r\n\t\t\t(val === \",\" || val === \".\" || val === \"-\" || !isNaN(Number(val))) &&\r\n\t\t\t!(val === \",\" && sanitizedInput[sanitizedInput.length - 1] === val)\r\n\t\t) {\r\n\t\t\tsanitizedInput += val;\r\n\t\t}\r\n\t}\r\n\r\n\t//Transform to array\r\n\r\n\tconst splitedText: Array<string> = sanitizedInput.split(\",\");\r\n\tfor (let i = 0; i < splitedText.length; i++) {\r\n\t\tconst candidateNumber = Number(splitedText[i]);\r\n\r\n\t\tif (!isNaN(candidateNumber)) {\r\n\t\t\treturnValue.push(candidateNumber);\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnValue;\r\n};\r\n\r\nexport const arrayToText = (input: Array<any>) => {\r\n\tlet returnValue: string = \"\";\r\n\tfor (let i = 0; i < input.length; i++) {\r\n\t\treturnValue += String(input[i]) + \",\";\r\n\t}\r\n\treturn returnValue;\r\n};\r\n\r\nexport const sanitizeText = (input: string): string => {\r\n\tlet returnValue: string = \"\";\r\n\tfor (let i = 0; i < input.length; i++) {\r\n\t\tlet val = input[i];\r\n\t\tif (val === \",\" || val === \".\" || val === \"-\" || !isNaN(Number(val))) {\r\n\t\t\treturnValue += val;\r\n\t\t}\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","const letters = [\r\n\t\"X\",\r\n\t\"Y\",\r\n\t\"Z\",\r\n\t\"P\",\r\n\t\"Q\",\r\n\t\"R\",\r\n\t\"S\",\r\n\t\"A\",\r\n\t\"B\",\r\n\t\"C\",\r\n\t\"D\",\r\n\t\"E\",\r\n\t\"F\",\r\n\t\"G\",\r\n\t\"H\",\r\n\t\"I\",\r\n\t\"J\",\r\n\t\"K\",\r\n\t\"M\",\r\n\t\"N\",\r\n\t\"L\",\r\n\t\"O\",\r\n\t\"P\",\r\n\t\"Q\",\r\n\t\"R\",\r\n\t\"S\",\r\n\t\"V\",\r\n\t\"O\",\r\n\t\"W\",\r\n\t\"X\",\r\n\t\"Y\",\r\n\t\"Z\",\r\n];\r\nexport const newLabel = (length: number): string => {\r\n\tif (length < letters.length) {\r\n\t\treturn letters[length];\r\n\t} else {\r\n\t\treturn letters[Math.floor(Math.random() * (letters.length - 0 + 1) + 0)];\r\n\t}\r\n};\r\n","import { State } from \"../../../types/store\";\r\nimport { sanitizeText, textToArray } from \"../../utils/convertions\";\r\nimport { newLabel } from \"../../utils/newLabel\";\r\nimport { randomColor } from \"../../utils/randomColor\";\r\nimport { Action, EAction } from \"../actions\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tlet clone = [...state.dataSet1];\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET1_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet1: [],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET1_ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet1: [\r\n\t\t\t\t\t...state.dataSet1,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: newLabel(state.dataSet1.length),\r\n\t\t\t\t\t\traw: \"\",\r\n\t\t\t\t\t\tarray: [],\r\n\t\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET1_REMOVE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet1: state.dataSet1\r\n\t\t\t\t\t.slice(0, action.payload)\r\n\t\t\t\t\t.concat(...state.dataSet1.slice(action.payload + 1)),\r\n\t\t\t};\r\n\t\tcase EAction.DATASET1_SET_LABEL:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tlabel: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet1: clone };\r\n\t\tcase EAction.DATASET1_SET_RAW:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\traw: sanitizeText(action.payload.data),\r\n\t\t\t\tarray: textToArray(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet1: clone };\r\n\t\tcase EAction.DATASET1_SET_COLOR:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tcolor: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet1: clone };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { State } from \"../../../types/store\";\r\nimport { newLabel } from \"../../utils/newLabel\";\r\nimport { randomColor } from \"../../utils/randomColor\";\r\nimport { Action, EAction } from \"../actions\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tlet clone = [...state.dataSet2];\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET2_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet2: [],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET2_ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet2: [\r\n\t\t\t\t\t...state.dataSet2,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: newLabel(state.dataSet2.length),\r\n\t\t\t\t\t\traw: 0,\r\n\t\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET2_REMOVE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet2: state.dataSet2\r\n\t\t\t\t\t.slice(0, action.payload)\r\n\t\t\t\t\t.concat(...state.dataSet2.slice(action.payload + 1)),\r\n\t\t\t};\r\n\t\tcase EAction.DATASET2_SET_LABEL:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tlabel: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet2: clone };\r\n\t\tcase EAction.DATASET2_SET_VALUE:\r\n\t\t\t//Pie/Doughnut chart does not accept negative values\r\n\t\t\tif (state.selectedChart === 3 || state.selectedChart === 4) {\r\n\t\t\t\tif (action.payload.data.includes(\"-\")) {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\traw: Number(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet2: clone };\r\n\t\tcase EAction.DATASET2_SET_COLOR:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tcolor: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet2: clone };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { State } from \"../../../types/store\";\r\nimport { sanitizeText, textToArray } from \"../../utils/convertions\";\r\nimport { randomColor } from \"../../utils/randomColor\";\r\nimport { Action, EAction } from \"../actions\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET3_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet3: {\r\n\t\t\t\t\tlabel: \"X\",\r\n\t\t\t\t\traw: \"\",\r\n\t\t\t\t\tarray: [],\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET3_SET_LABEL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet3: {\r\n\t\t\t\t\t...state.dataSet3,\r\n\t\t\t\t\tlabel: action.payload,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET3_SET_RAW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet3: {\r\n\t\t\t\t\t...state.dataSet3,\r\n\t\t\t\t\traw: sanitizeText(action.payload),\r\n\t\t\t\t\tarray: textToArray(action.payload),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET3_SET_COLOR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet3: {\r\n\t\t\t\t\t...state.dataSet3,\r\n\t\t\t\t\tcolor: action.payload,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { State } from \"../../../types/store\";\r\nimport { sanitizeText, textToArray } from \"../../utils/convertions\";\r\nimport { newLabel } from \"../../utils/newLabel\";\r\nimport { randomColor } from \"../../utils/randomColor\";\r\nimport { Action, EAction } from \"../actions\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tlet clone = [...state.dataSet4];\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET4_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet4: [],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET4_ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet4: [\r\n\t\t\t\t\t...state.dataSet4,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: newLabel(state.dataSet4.length),\r\n\t\t\t\t\t\trawX: \"\",\r\n\t\t\t\t\t\trawY: \"\",\r\n\t\t\t\t\t\tarrayX: [],\r\n\t\t\t\t\t\tarrayY: [],\r\n\t\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET4_REMOVE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet4: state.dataSet4\r\n\t\t\t\t\t.slice(0, action.payload)\r\n\t\t\t\t\t.concat(...state.dataSet4.slice(action.payload + 1)),\r\n\t\t\t};\r\n\t\tcase EAction.DATASET4_SET_LABEL:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tlabel: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet4: clone };\r\n\t\tcase EAction.DATASET4_SET_RAWX:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\trawX: sanitizeText(action.payload.data),\r\n\t\t\t\tarrayX: textToArray(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet4: clone };\r\n\t\tcase EAction.DATASET4_SET_RAWY:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\trawY: sanitizeText(action.payload.data),\r\n\t\t\t\tarrayY: textToArray(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet4: clone };\r\n\t\tcase EAction.DATASET4_SET_COLOR:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tcolor: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet4: clone };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { State } from \"../../types/store\";\r\nimport { Action, EAction } from \"./actions\";\r\n\r\nimport selectedChart from \"./selectedChart/reducer\";\r\nimport chartStyle from \"./chartStyle/reducer\";\r\nimport dataSet1 from \"./dataSet1/reducer\";\r\nimport dataSet2 from \"./dataSet2/reducer\";\r\nimport dataSet3 from \"./dataSet3/reducer\";\r\nimport dataSet4 from \"./dataSet4/reducer\";\r\n\r\nconst RootReducer = (state: State, action: Action): State => {\r\n\tswitch (action.type) {\r\n\t\tcase EAction.SELECTEDCHART_SET:\r\n\t\t\treturn selectedChart(state, action);\r\n\r\n\t\tcase EAction.CHARTSTYLE_SET:\r\n\t\t\treturn chartStyle(state, action);\r\n\r\n\t\tcase EAction.DATASET1_CLEAR:\r\n\t\tcase EAction.DATASET1_ADD:\r\n\t\tcase EAction.DATASET1_REMOVE:\r\n\t\tcase EAction.DATASET1_SET_LABEL:\r\n\t\tcase EAction.DATASET1_SET_RAW:\r\n\t\tcase EAction.DATASET1_SET_COLOR:\r\n\t\t\treturn dataSet1(state, action);\r\n\r\n\t\tcase EAction.DATASET2_CLEAR:\r\n\t\tcase EAction.DATASET2_ADD:\r\n\t\tcase EAction.DATASET2_REMOVE:\r\n\t\tcase EAction.DATASET2_SET_LABEL:\r\n\t\tcase EAction.DATASET2_SET_VALUE:\r\n\t\tcase EAction.DATASET2_SET_COLOR:\r\n\t\t\treturn dataSet2(state, action);\r\n\r\n\t\tcase EAction.DATASET3_CLEAR:\r\n\t\tcase EAction.DATASET3_SET_LABEL:\r\n\t\tcase EAction.DATASET3_SET_RAW:\r\n\t\tcase EAction.DATASET3_SET_COLOR:\r\n\t\t\treturn dataSet3(state, action);\r\n\r\n\t\tcase EAction.DATASET4_ADD:\r\n\t\tcase EAction.DATASET4_CLEAR:\r\n\t\tcase EAction.DATASET4_REMOVE:\r\n\t\tcase EAction.DATASET4_SET_LABEL:\r\n\t\tcase EAction.DATASET4_SET_RAWX:\r\n\t\tcase EAction.DATASET4_SET_RAWY:\r\n\t\tcase EAction.DATASET4_SET_COLOR:\r\n\t\t\treturn dataSet4(state, action);\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default RootReducer;\r\n","import { createContext, useReducer } from \"react\";\r\nimport { initialState } from \"../../types/store\";\r\nimport Reducer from \"./reducer\";\r\n\r\nconst Store = (props: { children?: any }) => {\r\n\tconst [state, dispatch] = useReducer(Reducer, initialState);\r\n\treturn (\r\n\t\t<Context.Provider value={[state, dispatch]}>\r\n\t\t\t{props.children}\r\n\t\t</Context.Provider>\r\n\t);\r\n};\r\n\r\nexport const Context = createContext<any>(initialState);\r\nexport default Store;\r\n","import \"./style.scss\";\r\nconst Button = (props: {\r\n\tchildren: any;\r\n\tvariant?: \"common\";\r\n\tm?: number;\r\n\tmr?: number;\r\n\tml?: number;\r\n\tmb?: number;\r\n\tmt?: number;\r\n\tonClick?: any;\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmargin: props.m,\r\n\t\t\t\tmarginRight: props.mr,\r\n\t\t\t\tmarginLeft: props.ml,\r\n\t\t\t\tmarginBottom: props.mb,\r\n\t\t\t\tmarginTop: props.mt,\r\n\t\t\t}}\r\n\t\t\tclassName={\"button\"}\r\n\t\t\tonClick={props.onClick}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","interface chart {\r\n\ticon: \"Bar\" | \"Histogram\" | \"Pie\" | \"Plot\" | \"ScatterPlot\" | \"Doughnut\";\r\n\tname: string;\r\n}\r\n\r\nconst charList: Array<chart> = [\r\n\t{ icon: \"Plot\", name: \"Plot\" },\r\n\t{ icon: \"ScatterPlot\", name: \"Scatter Plot\" },\r\n\t{ icon: \"Bar\", name: \"Bar chart\" },\r\n\t{ icon: \"Pie\", name: \"Pie Chart\" },\r\n\t{ icon: \"Doughnut\", name: \"Doughnut\" },\r\n];\r\n\r\nexport default charList;\r\n","import { useContext } from \"react\";\r\nimport Button from \"../../shared/components/Button\";\r\nimport charList from \"../../shared/constants/chartsList\";\r\nimport { Context } from \"../../shared/store\";\r\nimport { DonwloadCanvas } from \"../../shared/utils/downloadCanvas\";\r\nimport { State } from \"../../types/store\";\r\nimport \"./style.scss\";\r\nconst ChartHeader = () => {\r\n\tconst [state] = useContext<[State]>(Context);\r\n\r\n\treturn (\r\n\t\t<div className=\"fr chart-header\">\r\n\t\t\t<div>\r\n\t\t\t\t<h3>{charList[state.selectedChart].name}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"fr\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tmr={10}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tDonwloadCanvas();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave image\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartHeader;\r\n","const DonwloadCanvas = () => {\r\n\tvar link = document.createElement(\"a\");\r\n\tlink.download = \"mygraph-\" + Math.floor(Date.now() / 1000) + \".png\";\r\n\tlink.href = document.getElementsByTagName(\"canvas\")[0]!.toDataURL();\r\n\tlink.click();\r\n};\r\n\r\nexport { DonwloadCanvas };\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Icon = (props: { name: string }) => {\r\n\tconst [icon, setIcon] = useState<any>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst dinamicImport = async () => {\r\n\t\t\tswitch (props.name) {\r\n\t\t\t\tcase \"Bar\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Bar.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Histogram\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Histogram.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Pie\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Pie.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Plot\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Plot.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ScatterPlot\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Scatter Plot.svg\"))\r\n\t\t\t\t\t\t\t.default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Doughnut\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Doughnut.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Cross\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Cross.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Tick\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Tick.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Delete\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Delete.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Edit\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Edit.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\t\tdinamicImport();\r\n\t}, [icon, props.name]);\r\n\r\n\treturn (\r\n\t\t<div className=\"icon\">\r\n\t\t\t{icon !== null ? <img alt=\"Icon\" src={icon} /> : <></>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\ninterface props {\r\n\tplaceholder?: string;\r\n\tvalue?: string;\r\n\tonChange(e: React.ChangeEvent<HTMLInputElement>): any;\r\n\tclassName?: any;\r\n\tm?: number;\r\n\tmr?: number;\r\n\tml?: number;\r\n\tmb?: number;\r\n\tmt?: number;\r\n\tw?: string;\r\n}\r\n\r\nconst Input = (props: props) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tstyle={{\r\n\t\t\t\tmargin: props.m,\r\n\t\t\t\tmarginRight: props.mr,\r\n\t\t\t\tmarginLeft: props.ml,\r\n\t\t\t\tmarginBottom: props.mb,\r\n\t\t\t\tmarginTop: props.mt,\r\n\t\t\t\twidth: props.w,\r\n\t\t\t}}\r\n\t\t\tclassName={\"input \"}\r\n\t\t\tplaceholder={props.placeholder}\r\n\t\t\tvalue={props.value}\r\n\t\t\tonChange={props.onChange}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../Button\";\r\nimport Icon from \"../Icon\";\r\nimport Input from \"../Input\";\r\nimport \"./style.scss\";\r\ninterface props {\r\n\tvalue: string;\r\n\tonChange: (data: string) => void;\r\n}\r\n\r\nconst EditableText = (props: props) => {\r\n\tconst [editing, setEditing] = useState(false);\r\n\tconst [tempText, setTempText] = useState(props.value);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTempText(props.value);\r\n\t}, [props.value, editing]);\r\n\r\n\tconst handleChangeTempText = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetTempText(e.target.value);\r\n\t};\r\n\r\n\tconst handleConfirmChanges = () => {\r\n\t\tprops.onChange(tempText);\r\n\t\tsetEditing(false);\r\n\t};\r\n\r\n\tconst handleSwitchEditingMode = () => {\r\n\t\tsetEditing(!editing);\r\n\t};\r\n\r\n\treturn editing ? (\r\n\t\t<div className=\"editable-text-editing\">\r\n\t\t\t<div className=\"editable-text-editing-left\">\r\n\t\t\t\t<Input w={\"100%\"} value={tempText} onChange={handleChangeTempText} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"editable-text-editing-right\">\r\n\t\t\t\t<Button onClick={handleConfirmChanges} mr={5}>\r\n\t\t\t\t\t<Icon name=\"Tick\" />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button onClick={handleSwitchEditingMode}>\r\n\t\t\t\t\t<Icon name=\"Cross\" />\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"editable-text-idle\">\r\n\t\t\t<div>{props.value}</div>\r\n\t\t\t<Button onClick={handleSwitchEditingMode}>\r\n\t\t\t\t<Icon name=\"Edit\" />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditableText;\r\n","import EditableText from \"../../EditableText\";\r\nimport Input from \"../../Input\";\r\nimport \"../../../../assets/sass/dataset-input.scss\";\r\n\r\ninterface ILeftSide1Props {\r\n\tdata: { label: string; raw: any; color: string };\r\n\thandleOnChangeLabel: (data: string) => void;\r\n\thandleOnChangeInput: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const DataSetInputLeftSide1 = (props: ILeftSide1Props) => {\r\n\treturn (\r\n\t\t<div className=\"dataset-input-inner-left\">\r\n\t\t\t<EditableText\r\n\t\t\t\tvalue={props.data.label}\r\n\t\t\t\tonChange={props.handleOnChangeLabel}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tvalue={props.data.raw}\r\n\t\t\t\tonChange={props.handleOnChangeInput}\r\n\t\t\t\tplaceholder=\"value1, value2, value3 ...\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import Button from \"../Button\";\r\nimport \"./style.scss\";\r\n\r\nconst Modal = (props: {\r\n\tchildren: JSX.Element;\r\n\tonClose: any;\r\n\ttitle: string;\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"modal-wrapper\">\r\n\t\t\t<div className=\"modal-interior\">\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<div className=\"modal-content-header\">\r\n\t\t\t\t\t\t<div>{props.title}</div>\r\n\t\t\t\t\t\t<Button onClick={props.onClose}>X</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\nimport Modal from \"../components/Modal/index\";\r\n\r\nconst useModal = (content: JSX.Element, title: string) => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tconst openModal = () => {\r\n\t\tsetIsOpen(true);\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\treturn {\r\n\t\tisOpen,\r\n\t\topenModal,\r\n\t\tcloseModal,\r\n\t\tModal: ModalWrapper(content, isOpen, closeModal, title),\r\n\t};\r\n};\r\n\r\nexport default useModal;\r\n\r\nconst ModalWrapper = (\r\n\tcontent: JSX.Element,\r\n\tisOpen: boolean,\r\n\tonClose: any,\r\n\ttitle: string\r\n) =>\r\n\tisOpen ? (\r\n\t\t<Modal title={title} onClose={onClose}>\r\n\t\t\t{content}\r\n\t\t</Modal>\r\n\t) : (\r\n\t\t<></>\r\n\t);\r\n","import React from \"react\";\r\nimport { ColorResult, SketchPicker } from \"react-color\";\r\nimport useModal from \"../../hooks/useModal\";\r\nimport Button from \"../Button\";\r\n\r\ninterface props {\r\n\tvalue: string;\r\n\thandleOnChangeColor: (color: string) => void;\r\n}\r\n\r\nconst ColorPicker = (props: props) => {\r\n\tconst handleOnChange = (\r\n\t\tcolor: ColorResult,\r\n\t\tevent: React.ChangeEvent<HTMLInputElement>\r\n\t) => {\r\n\t\tprops.handleOnChangeColor(color.hex);\r\n\t};\r\n\r\n\tconst { openModal, Modal } = useModal(\r\n\t\t<SketchPicker color={props.value} onChange={handleOnChange} />,\r\n\t\t\"Color picker\"\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button onClick={openModal}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborder: \"1px solid white\",\r\n\t\t\t\t\t\twidth: 15,\r\n\t\t\t\t\t\theight: 15,\r\n\t\t\t\t\t\tbackgroundColor: props.value,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Button>\r\n\t\t\t{Modal}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ColorPicker;\r\n","import Button from \"../../Button\";\r\nimport ColorPicker from \"../../ColorPicker\";\r\nimport Icon from \"../../Icon\";\r\nimport \"../../../../assets/sass/dataset-input.scss\";\r\n\r\ninterface IRightSideProps {\r\n\thandleOnChangeColor: (color: string) => void;\r\n\thandleOnDeleteDataset: () => void;\r\n\tdata: { color: string };\r\n}\r\n\r\nexport const DataSetInputRightSide = (props: IRightSideProps) => {\r\n\treturn (\r\n\t\t<div className=\"dataset-input-inner-right\">\r\n\t\t\t<ColorPicker\r\n\t\t\t\tvalue={props.data.color}\r\n\t\t\t\thandleOnChangeColor={props.handleOnChangeColor}\r\n\t\t\t/>\r\n\t\t\t<Button onClick={props.handleOnDeleteDataset}>\r\n\t\t\t\t<Icon name=\"Delete\" />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import \"../../../../assets/sass/dataset-input.scss\";\r\nconst Container = (props: { children: JSX.Element[] }) => {\r\n\treturn <div className=\"dataset-input\">{props.children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { DataSet1 } from \"../../../types/store\";\r\nimport Actions, { Action } from \"../../store/actions\";\r\nimport { DataSetInputLeftSide1 } from \"./layouts/LeftSide1\";\r\nimport { DataSetInputRightSide } from \"./layouts/RightSide1\";\r\nimport Container from \"./layouts/Container\";\r\n\r\ninterface props {\r\n\tdata: DataSet1;\r\n\tindex: number;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet1Input = (props: props) => {\r\n\tconst handleOnChangeLabel = (data: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet1.setLabel(props.index, data));\r\n\t};\r\n\r\n\tconst handleOnChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.dispatcher(Actions.dataSet1.setRaw(props.index, e.target.value));\r\n\t};\r\n\r\n\tconst handleOnChangeColor = (color: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet1.setColor(props.index, color));\r\n\t};\r\n\r\n\tconst handleOnDeleteDataset = () => {\r\n\t\tprops.dispatcher(Actions.dataSet1.remove(props.index));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide1\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeInput={handleOnChangeInput}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeColor={handleOnChangeColor}\r\n\t\t\t\thandleOnDeleteDataset={handleOnDeleteDataset}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default DataSet1Input;\r\n","import { DataSet2 } from \"../../../types/store\";\r\nimport Actions, { Action } from \"../../store/actions\";\r\nimport Container from \"./layouts/Container\";\r\nimport { DataSetInputLeftSide1 } from \"./layouts/LeftSide1\";\r\nimport { DataSetInputRightSide } from \"./layouts/RightSide1\";\r\n\r\ninterface props {\r\n\tdata: DataSet2;\r\n\tindex: number;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet2Input = (props: props) => {\r\n\tconst handleOnChangeLabel = (data: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet2.setLabel(props.index, data));\r\n\t};\r\n\r\n\tconst handleOnChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.dispatcher(Actions.dataSet2.setValue(props.index, e.target.value));\r\n\t};\r\n\r\n\tconst handleOnChangeColor = (color: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet2.setColor(props.index, color));\r\n\t};\r\n\r\n\tconst handleOnDeleteDataset = () => {\r\n\t\tprops.dispatcher(Actions.dataSet2.remove(props.index));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide1\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t\thandleOnChangeInput={handleOnChangeInput}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeColor={handleOnChangeColor}\r\n\t\t\t\thandleOnDeleteDataset={handleOnDeleteDataset}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default DataSet2Input;\r\n","import EditableText from \"../../EditableText\";\r\nimport Input from \"../../Input\";\r\nimport \"../../../../assets/sass/dataset-input.scss\";\r\n\r\ninterface ILeftSide2Props {\r\n\tdata: { label: string; rawX: any; rawY: any; color: string };\r\n\thandleOnChangeLabel: (data: string) => void;\r\n\thandleOnChangeInput: (\r\n\t\te: React.ChangeEvent<HTMLInputElement>,\r\n\t\ttype: \"RAWX\" | \"RAWY\"\r\n\t) => void;\r\n}\r\n\r\nexport const DataSetInputLeftSide2 = (props: ILeftSide2Props) => {\r\n\treturn (\r\n\t\t<div className=\"dataset-input-inner-left\">\r\n\t\t\t<EditableText\r\n\t\t\t\tvalue={props.data.label}\r\n\t\t\t\tonChange={props.handleOnChangeLabel}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tvalue={props.data.rawX}\r\n\t\t\t\tonChange={(e) => props.handleOnChangeInput(e, \"RAWX\")}\r\n\t\t\t\tplaceholder=\"value1, value2, value3 ...\"\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tvalue={props.data.rawY}\r\n\t\t\t\tonChange={(e) => props.handleOnChangeInput(e, \"RAWY\")}\r\n\t\t\t\tplaceholder=\"value1, value2, value3 ...\"\r\n\t\t\t\tmb={10}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { DataSet4 } from \"../../../types/store\";\r\nimport Actions, { Action } from \"../../store/actions\";\r\nimport Container from \"./layouts/Container\";\r\nimport { DataSetInputLeftSide2 } from \"./layouts/LeftSide2\";\r\nimport { DataSetInputRightSide } from \"./layouts/RightSide1\";\r\n\r\ninterface props {\r\n\tdata: DataSet4;\r\n\tindex: number;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet4Input = (props: props) => {\r\n\tconst handleOnChangeLabel = (data: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet4.setLabel(props.index, data));\r\n\t};\r\n\r\n\tconst handleOnChangeInput = (\r\n\t\te: React.ChangeEvent<HTMLInputElement>,\r\n\t\ttype: \"RAWX\" | \"RAWY\"\r\n\t) => {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"RAWX\":\r\n\t\t\t\tprops.dispatcher(Actions.dataSet4.setRawX(props.index, e.target.value));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"RAWY\":\r\n\t\t\t\tprops.dispatcher(Actions.dataSet4.setRawY(props.index, e.target.value));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleOnChangeColor = (color: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet4.setColor(props.index, color));\r\n\t};\r\n\r\n\tconst handleOnDeleteDataset = () => {\r\n\t\tprops.dispatcher(Actions.dataSet4.remove(props.index));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide2\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t\thandleOnChangeInput={handleOnChangeInput}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeColor={handleOnChangeColor}\r\n\t\t\t\thandleOnDeleteDataset={handleOnDeleteDataset}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default DataSet4Input;\r\n","import { useContext } from \"react\";\r\nimport Button from \"../../shared/components/Button\";\r\nimport DataSet1Input from \"../../shared/components/DataSetInput/DataSet1\";\r\nimport DataSet2Input from \"../../shared/components/DataSetInput/DataSet2\";\r\nimport DataSet4Input from \"../../shared/components/DataSetInput/DataSet4\";\r\nimport { Context } from \"../../shared/store\";\r\n\r\nimport Actions, { Action } from \"../../shared/store/actions\";\r\nimport { State } from \"../../types/store\";\r\n\r\nexport const PlotInputs = () => {\r\n\tconst [state, dispatcher] = useContext<[State, (action: Action) => {}]>(\r\n\t\tContext\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button onClick={() => dispatcher(Actions.dataSet1.add())}>\r\n\t\t\t\tAdd dataset\r\n\t\t\t</Button>\r\n\t\t\t{state.dataSet1.map((dataset, index) => (\r\n\t\t\t\t<DataSet1Input data={dataset} dispatcher={dispatcher} index={index} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const ScatterInputs = () => {\r\n\tconst [state, dispatcher] = useContext<[State, (action: Action) => {}]>(\r\n\t\tContext\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button onClick={() => dispatcher(Actions.dataSet4.add())}>\r\n\t\t\t\tAdd dataset\r\n\t\t\t</Button>\r\n\t\t\t{state.dataSet4.map((dataset, index) => (\r\n\t\t\t\t<DataSet4Input data={dataset} dispatcher={dispatcher} index={index} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const BarPieInputs = () => {\r\n\tconst [state, dispatcher] = useContext<[State, (action: Action) => {}]>(\r\n\t\tContext\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button onClick={() => dispatcher(Actions.dataSet2.add())}>\r\n\t\t\t\tAdd dataset\r\n\t\t\t</Button>\r\n\t\t\t{state.dataSet2.map((dataset, index) => (\r\n\t\t\t\t<DataSet2Input data={dataset} index={index} dispatcher={dispatcher} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tBarPieInputs,\r\n\tPlotInputs,\r\n\tScatterInputs,\r\n} from \"../../ChartEditor/ChartInputs/setups\";\r\nimport { State } from \"../../types/store\";\r\nimport { Context } from \"../store\";\r\n\r\nconst useSelectInput = () => {\r\n\tconst [input, setInput] = useState(<></>);\r\n\tconst [state] = useContext<[State]>(Context);\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (state.selectedChart) {\r\n\t\t\tcase 0:\r\n\t\t\t\tsetInput(<PlotInputs />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tsetInput(<ScatterInputs />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\t\tsetInput(<BarPieInputs />);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}, [state.selectedChart]);\r\n\r\n\treturn input;\r\n};\r\n\r\nexport default useSelectInput;\r\n","import useSelectInput from \"../../shared/hooks/useSelectInput\";\r\nimport \"./style.scss\";\r\n\r\nconst ChartInputs = () => {\r\n\tconst InputComponent = useSelectInput();\r\n\treturn (\r\n\t\t<div className=\"chart-inputs\">\r\n\t\t\t<div style={{ marginTop: 5, marginBottom: 5 }}>Datasets:</div>\r\n\t\t\t{InputComponent}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartInputs;\r\n","import { DataSet2 } from \"../../../types/store\";\r\n\r\ntype dataset = {\r\n\tlabel: string;\r\n\tdata: Array<number>;\r\n\tbackgroundColor: Array<string>;\r\n\thoverOffset: 4;\r\n};\r\n\r\ntype adapterType = {\r\n\tlabels: Array<string>;\r\n\tdatasets: Array<dataset>;\r\n};\r\n\r\nexport const adapter3 = (input: Array<DataSet2>): adapterType => {\r\n\tconst labels: Array<string> = [];\r\n\tconst data: Array<number> = [];\r\n\tconst colors: Array<string> = [];\r\n\tinput.forEach((dataset) => {\r\n\t\tlabels.push(dataset.label);\r\n\t\tdata.push(dataset.raw);\r\n\t\tcolors.push(dataset.color);\r\n\t});\r\n\r\n\treturn {\r\n\t\tlabels,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"\",\r\n\t\t\t\tdata,\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t\thoverOffset: 4,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n};\r\n","import { DataSet4 } from \"../../../types/store\";\r\n\r\ntype dataset = {\r\n\tlabel: string;\r\n\tdata: Array<{ x: number; y: number }>;\r\n\tbackgroundColor: string;\r\n};\r\ntype adapterType = {\r\n\tdatasets: Array<dataset>;\r\n};\r\n\r\nexport const adapter4 = (input: Array<DataSet4>): adapterType => {\r\n\tlet dataArray: Array<dataset> = [];\r\n\r\n\tinput.forEach((dataset) => {\r\n\t\tdataArray.push({\r\n\t\t\tlabel: dataset.label,\r\n\t\t\tbackgroundColor: dataset.color,\r\n\t\t\tdata: createPoints(dataset.arrayX, dataset.arrayY),\r\n\t\t});\r\n\t});\r\n\r\n\treturn { datasets: dataArray };\r\n};\r\n\r\nconst createPoints = (\r\n\tx: Array<number>,\r\n\ty: Array<number>\r\n): Array<{ x: number; y: number }> => {\r\n\tlet returnValue: Array<{ x: number; y: number }> = [];\r\n\tx.forEach((xvalue, index) => {\r\n\t\treturnValue.push({\r\n\t\t\tx: xvalue,\r\n\t\t\ty: y[index],\r\n\t\t});\r\n\t});\r\n\treturn returnValue;\r\n};\r\n","import { adapter1 } from \"./adapter1\";\r\nimport { adapter2 } from \"./adapter2\";\r\nimport { adapter3 } from \"./adapter3\";\r\nimport { adapter4 } from \"./adapter4\";\r\nimport { minAndMaxBar } from \"./minAndMaxBar\";\r\n\r\nconst ChartAdapters = {\r\n\tLine: adapter1,\r\n\tBar: { adapter: adapter2, scale: minAndMaxBar },\r\n\tPie: adapter3,\r\n\tDoughnut: adapter3,\r\n\tScatterPlot: adapter4,\r\n\tHistogram: {},\r\n};\r\n\r\nexport default ChartAdapters;\r\n","import { DataSet1 } from \"../../../types/store\";\r\n\r\ntype dataset = {\r\n\tlabel: string;\r\n\tdata: Array<number>;\r\n\tfill: boolean;\r\n\tborderColor: string;\r\n\ttension: number;\r\n};\r\ntype adapterType = {\r\n\tlabels: Array<string>;\r\n\tdatasets: Array<dataset>;\r\n};\r\n\r\nexport const adapter1 = (data: Array<DataSet1>): adapterType => {\r\n\tlet datasets: Array<dataset> = [];\r\n\tlet labels: Array<string> = [];\r\n\tlet amountOfLabels = 0;\r\n\r\n\tdata.forEach((dataset) => {\r\n\t\tdatasets.push({\r\n\t\t\tlabel: dataset.label,\r\n\t\t\tdata: dataset.array,\r\n\t\t\tfill: false,\r\n\t\t\tborderColor: dataset.color,\r\n\t\t\ttension: 0.1,\r\n\t\t});\r\n\t\tif (dataset.array.length > amountOfLabels) {\r\n\t\t\tamountOfLabels = dataset.array.length;\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let i = 0; i <= amountOfLabels; i++) {\r\n\t\tlabels.push(\"\");\r\n\t}\r\n\r\n\treturn { labels, datasets };\r\n};\r\n","import { DataSet2 } from \"../../../types/store\";\r\n\r\ntype dataset = {\r\n\tlabel: string;\r\n\tdata: Array<number>;\r\n\tbackgroundColor: Array<string>;\r\n\tborderColor: Array<string>;\r\n\tborderWidth: 1;\r\n};\r\n\r\ntype adapterType = {\r\n\tlabels: Array<string>;\r\n\tdatasets: Array<dataset>;\r\n};\r\n\r\nexport const adapter2 = (input: Array<DataSet2>): adapterType => {\r\n\tconst labels: Array<string> = [];\r\n\tconst data: Array<number> = [];\r\n\tconst color: Array<string> = [];\r\n\tinput.forEach((dataset) => {\r\n\t\tlabels.push(dataset.label);\r\n\t\tdata.push(dataset.raw);\r\n\t\tcolor.push(dataset.color);\r\n\t});\r\n\treturn {\r\n\t\tlabels,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"\",\r\n\t\t\t\tdata,\r\n\t\t\t\tbackgroundColor: color,\r\n\t\t\t\tborderColor: color,\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n};\r\n","import { DataSet2 } from \"../../../types/store\";\r\n\r\nexport const minAndMaxBar = (input: DataSet2[]) => {\r\n\tlet min = 0,\r\n\t\tmax = 0;\r\n\r\n\tinput.forEach((dataset) => {\r\n\t\tif (dataset.raw < min) {\r\n\t\t\tmin = dataset.raw;\r\n\t\t}\r\n\t\tif (dataset.raw > max) {\r\n\t\t\tmax = dataset.raw;\r\n\t\t}\r\n\t});\r\n\r\n\treturn {\r\n\t\tmin: Math.floor(min - min / 5),\r\n\t\tmax: Math.floor(max + max / 5),\r\n\t\tstepSize: Math.floor(max / 10),\r\n\t};\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { State } from \"../../types/store\";\r\nimport { Context } from \"../store\";\r\nimport { Line, Scatter, Pie, Bar, Doughnut } from \"react-chartjs-2\";\r\nimport ChartAdapters from \"../utils/chartAdapters\";\r\n\r\nconst useSelectChart = () => {\r\n\tconst [chart, setChart] = useState(<></>);\r\n\tconst [state] = useContext<[State]>(Context);\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (state.selectedChart) {\r\n\t\t\tcase 0:\r\n\t\t\t\tsetChart(<Line data={ChartAdapters.Line(state.dataSet1)} />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tsetChart(<Scatter data={ChartAdapters.ScatterPlot(state.dataSet4)} />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tsetChart(\r\n\t\t\t\t\t<Bar\r\n\t\t\t\t\t\tdata={ChartAdapters.Bar.adapter(state.dataSet2)}\r\n\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\tscales: {\r\n\t\t\t\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\t\t\t\t\t\tticks: ChartAdapters.Bar.scale(state.dataSet2),\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tsetChart(<Pie data={ChartAdapters.Pie(state.dataSet2)} />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tsetChart(<Doughnut data={ChartAdapters.Doughnut(state.dataSet2)} />);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}, [\r\n\t\tstate.selectedChart,\r\n\t\tstate.dataSet1,\r\n\t\tstate.dataSet2,\r\n\t\tstate.dataSet3,\r\n\t\tstate.dataSet4,\r\n\t]);\r\n\r\n\treturn chart;\r\n};\r\n\r\nexport default useSelectChart;\r\n","import useSelectChart from \"../../shared/hooks/useSelectChart\";\r\nimport \"./style.scss\";\r\n\r\nconst ChartVisualize = () => {\r\n\tconst Chart = useSelectChart();\r\n\treturn <div className=\"chart-visualize\">{Chart}</div>;\r\n};\r\nexport default ChartVisualize;\r\n","export default __webpack_public_path__ + \"static/media/Logo.0a4ab6d3.svg\";","import ChartHeader from \"./ChartHeader\";\r\nimport ChartInputs from \"./ChartInputs\";\r\nimport ChartVisualize from \"./ChartVisualize\";\r\nimport \"./style.scss\";\r\nimport logo from \"../assets/images/Logo.svg\";\r\nconst ChartEditor = () => {\r\n\treturn (\r\n\t\t<div className=\"chart-editor\">\r\n\t\t\t<img\r\n\t\t\t\tsrc={logo}\r\n\t\t\t\talt=\"logo\"\r\n\t\t\t\tstyle={{ marginTop: 20 }}\r\n\t\t\t\tclassName=\"chart-logo\"\r\n\t\t\t/>\r\n\t\t\t<ChartHeader />\r\n\t\t\t<ChartVisualize />\r\n\t\t\t<ChartInputs />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartEditor;\r\n","import { useContext } from \"react\";\r\n\r\nimport { Context } from \"../../shared/store\";\r\nimport Actions, { Action } from \"../../shared/store/actions\";\r\nimport { State } from \"../../types/store\";\r\nimport \"./style.scss\";\r\n\r\nconst ChartSelector = (props: {\r\n\ticon: JSX.Element;\r\n\tname: string;\r\n\tindex: number;\r\n}) => {\r\n\tconst [state, dispatch] = useContext<[State, (action: Action) => State]>(\r\n\t\tContext\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={() => {\r\n\t\t\t\tdispatch(Actions.selectedChart.set(props.index));\r\n\t\t\t}}\r\n\t\t\tclassName={\r\n\t\t\t\tstate.selectedChart === props.index\r\n\t\t\t\t\t? \"chart-selector chart-selector-selected\"\r\n\t\t\t\t\t: \"chart-selector\"\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<div className=\"chart-selector-icon\">{props.icon}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartSelector;\r\n","import Icon from \"../shared/components/Icon\";\r\nimport charList from \"../shared/constants/chartsList\";\r\nimport ChartSelector from \"./ChartSelector\";\r\nimport \"./style.scss\";\r\n\r\nconst ChartList = () => {\r\n\treturn (\r\n\t\t<div className=\"chart-list\">\r\n\t\t\t{charList.map((chart, index) => (\r\n\t\t\t\t<ChartSelector\r\n\t\t\t\t\tname={chart.name}\r\n\t\t\t\t\tindex={index}\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\ticon={<Icon name={chart.icon} />}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartList;\r\n","import { useState } from \"react\";\r\nimport ChartEditor from \"./ChartEditor\";\r\nimport ChartList from \"./ChartList\";\r\n\r\nconst App = () => {\r\n\tconst [loading] = useState(false);\r\n\r\n\treturn loading ? (\r\n\t\t<div>Loading</div>\r\n\t) : (\r\n\t\t<div className=\"fr\">\r\n\t\t\t<ChartList />\r\n\t\t\t<ChartEditor />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport Store from \"./shared/store\";\n\nimport \"./assets/sass/flex.scss\";\nimport App from \"./app\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Store>\n\t\t\t<App />\n\t\t</Store>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//afrobull naruto\n"],"sourceRoot":""}