{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","types/store/actions.ts","shared/utils/dataGeneration/randomColor.ts","shared/utils/dataGeneration/exampleData.ts","types/store/state.ts","shared/store/selectedChart/reducer.ts","shared/store/chartStyle/reducer.ts","shared/utils/convertions.ts","shared/utils/dataGeneration/newLabel.ts","shared/store/dataSet1/reducer.ts","shared/store/dataSet2/reducer.ts","shared/store/dataSet3/reducer.ts","shared/store/dataSet4/reducer.ts","shared/store/dataSet5/reducer.ts","shared/store/reducer.ts","shared/store/index.tsx","shared/components/Button/index.tsx","shared/constants/chartsList.ts","ChartEditor/ChartHeader/index.tsx","shared/utils/downloadCanvas.ts","shared/components/Icon/index.tsx","shared/components/Input/index.tsx","shared/components/EditableText/index.tsx","shared/components/DataSetInput/layouts/LeftSide1.tsx","shared/components/Modal/index.tsx","shared/hooks/useModal.tsx","shared/components/ColorPicker/index.tsx","shared/components/DataSetInput/layouts/RightSide1.tsx","shared/components/DataSetInput/layouts/Container.tsx","shared/store/actions.ts","shared/store/selectedChart/actions.ts","shared/store/chartStyle/actions.ts","shared/store/dataSet1/actions.ts","shared/store/dataSet2/actions.ts","shared/store/dataSet3/actions.ts","shared/store/dataSet4/actions.ts","shared/store/dataSet5/actions.ts","shared/components/DataSetInput/DataSet1.tsx","shared/components/DataSetInput/DataSet2.tsx","shared/components/DataSetInput/DataSet3.tsx","shared/components/DataSetInput/layouts/LeftSide2.tsx","shared/components/DataSetInput/DataSet4.tsx","shared/components/DataSetInput/DataSet5.tsx","shared/components/DataSetInput/layouts/LeftSide3.tsx","shared/components/DataSetInput/layouts/RightSide2.tsx","shared/components/DataSetInput/DataSet5Title.tsx","ChartEditor/ChartInputs/setups.tsx","shared/hooks/useSelectInput.tsx","ChartEditor/ChartInputs/index.tsx","shared/utils/chartAdapters/adapter3.ts","shared/utils/chartAdapters/adapter4.ts","shared/utils/chartAdapters/adapter5.ts","shared/utils/chartAdapters/index.ts","shared/utils/chartAdapters/adapter1.ts","shared/utils/chartAdapters/adapter2.ts","shared/utils/chartAdapters/minAndMaxBar.ts","shared/utils/chartAdapters/adapter6.ts","shared/hooks/useSelectChart.tsx","ChartEditor/ChartVisualize/index.tsx","assets/images/Logo.svg","ChartEditor/index.tsx","ChartList/ChartSelector/index.tsx","ChartList/index.tsx","app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","EAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","randomColor","color","Math","floor","random","toString","length","i","genRandomNumbers","amount","returnValue","raw","array","randomNumber","push","RandomDataset","type","valueForDataset1","label","valueForDataset2","dataset2","valueForDataset3","valueForDataset4","x","y","rawX","arrayX","rawY","arrayY","valueForDataset5","data","labels","datasets","initialState","selectedChart","chartStyle","dataSet1","dataSet2","dataSet3","dataSet4","dataSet5","Reducer","state","action","SELECTEDCHART_SET","payload","CHARTSTYLE_SET","textToNumberArray","input","sanitizedInput","val","isNaN","Number","splitedText","split","candidateNumber","textToTextArray","sanitizeText","letters","newLabel","clone","DATASET1_CLEAR","DATASET1_ADD","DATASET1_REMOVE","slice","concat","DATASET1_SET_LABEL","index","DATASET1_SET_RAW","DATASET1_SET_COLOR","DATASET2_CLEAR","DATASET2_ADD","DATASET2_REMOVE","DATASET2_SET_LABEL","DATASET2_SET_VALUE","includes","DATASET2_SET_COLOR","DATASET3_CLEAR","DATASET3_SET_LABEL","DATASET3_SET_RAW","DATASET3_SET_COLOR","DATASET4_CLEAR","DATASET4_ADD","DATASET4_REMOVE","DATASET4_SET_LABEL","DATASET4_SET_RAWX","DATASET4_SET_RAWY","DATASET4_SET_COLOR","DATASET5_CLEAR","DATASET5_ADD","DATASET5_REMOVE","DATASET5_SET_LABEL","DATASET5_SET_RAW","DATASET5_SET_COLOR","DATASET5_SET_TITLE","RootReducer","Context","createContext","Store","props","useReducer","dispatch","Provider","value","children","Button","style","margin","m","marginRight","mr","marginLeft","ml","marginBottom","mb","marginTop","mt","className","onClick","charList","icon","name","ChartHeader","useContext","link","document","createElement","download","Date","now","href","getElementsByTagName","toDataURL","click","DonwloadCanvas","Icon","useState","setIcon","useEffect","a","default","dinamicImport","alt","src","Input","width","w","placeholder","onChange","EditableText","editing","setEditing","tempText","setTempText","handleSwitchEditingMode","e","target","DataSetInputLeftSide1","handleOnChangeLabel","handleOnChangeInput","Modal","title","onClose","useModal","content","isOpen","setIsOpen","closeModal","openModal","Component","ModalWrapper","ColorPicker","event","handleOnChangeColor","hex","border","height","backgroundColor","DataSetInputRightSide","handleOnDeleteDataset","Container","Actions","set","clear","add","remove","setLabel","setRaw","setColor","setValue","setRawX","setRawY","setTitle","DataSet1Input","dispatcher","DataSet2Input","DataSet3Input","DataSetInputLeftSide2","DataSet4Input","DataSet5Input","DataSetInputLeftSide3","DataSetInputRightSide2","DataSet5TitleInput","PlotInputs","map","dataset","DataSet1","ScatterInputs","DataSet4","BarPieInputs","DataSet2","HistogramInputs","DataSet3","RadarInputs","DataSet5Title","DataSet5","useSelectInput","setInput","ChartInputs","InputComponent","adapter3","colors","forEach","hoverOffset","createPoints","xvalue","emptyDataset","options","ChartAdapters","Line","amountOfLabels","fill","borderColor","tension","Bar","adapter","borderWidth","scale","min","max","stepSize","Pie","Doughnut","ScatterPlot","dataArray","Histogram","numberOfIntervals","intervalsWidth","maxValue","minValue","undefined","sqrt","ranges","count","range","String","round","scales","xAxes","barPercentage","yAxes","ticks","beginAtZero","legend","display","Radar","pointBackgroundColor","useSelectChart","chart","setChart","chartParameters","ChartVisualize","Chart","ChartEditor","logo","ChartSelector","ChartList","App","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.516bba86.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export enum EAction {\r\n\tSELECTEDCHART_SET,\r\n\r\n\tCHARTSTYLE_SET,\r\n\r\n\tDATASET_CLEAR,\r\n\r\n\tDATASET1_CLEAR,\r\n\tDATASET1_ADD,\r\n\tDATASET1_REMOVE,\r\n\tDATASET1_SET_LABEL,\r\n\tDATASET1_SET_RAW,\r\n\tDATASET1_SET_COLOR,\r\n\r\n\tDATASET2_CLEAR,\r\n\tDATASET2_ADD,\r\n\tDATASET2_REMOVE,\r\n\tDATASET2_SET_LABEL,\r\n\tDATASET2_SET_VALUE,\r\n\tDATASET2_SET_COLOR,\r\n\r\n\tDATASET3_CLEAR,\r\n\tDATASET3_SET_LABEL,\r\n\tDATASET3_SET_RAW,\r\n\tDATASET3_SET_COLOR,\r\n\r\n\tDATASET4_CLEAR,\r\n\tDATASET4_ADD,\r\n\tDATASET4_REMOVE,\r\n\tDATASET4_SET_LABEL,\r\n\tDATASET4_SET_RAWX,\r\n\tDATASET4_SET_RAWY,\r\n\tDATASET4_SET_COLOR,\r\n\r\n\tDATASET5_CLEAR,\r\n\tDATASET5_ADD,\r\n\tDATASET5_REMOVE,\r\n\tDATASET5_SET_RAW,\r\n\tDATASET5_SET_COLOR,\r\n\tDATASET5_SET_LABEL,\r\n\tDATASET5_SET_TITLE,\r\n}\r\n\r\ninterface IndexedPayload<T> {\r\n\tindex: number;\r\n\tdata: T;\r\n}\r\n\r\nexport type Action =\r\n\t| { type: EAction.SELECTEDCHART_SET; payload: number }\r\n\t| { type: EAction.CHARTSTYLE_SET; payload: number }\r\n\t| { type: EAction.DATASET_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET1_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET1_ADD; payload: null }\r\n\t| { type: EAction.DATASET1_REMOVE; payload: number }\r\n\t| { type: EAction.DATASET1_SET_LABEL; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET1_SET_RAW; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET1_SET_COLOR; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET2_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET2_ADD; payload: null }\r\n\t| { type: EAction.DATASET2_REMOVE; payload: number }\r\n\t| { type: EAction.DATASET2_SET_LABEL; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET2_SET_VALUE; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET2_SET_COLOR; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET3_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET3_SET_LABEL; payload: string }\r\n\t| { type: EAction.DATASET3_SET_RAW; payload: string }\r\n\t| { type: EAction.DATASET3_SET_COLOR; payload: string }\r\n\t| { type: EAction.DATASET4_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET4_ADD; payload: null }\r\n\t| { type: EAction.DATASET4_REMOVE; payload: number }\r\n\t| { type: EAction.DATASET4_SET_LABEL; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET4_SET_RAWX; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET4_SET_RAWY; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET4_SET_COLOR; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET5_CLEAR; payload: null }\r\n\t| { type: EAction.DATASET5_ADD; payload: null }\r\n\t| { type: EAction.DATASET5_REMOVE; payload: number }\r\n\t| { type: EAction.DATASET5_SET_COLOR; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET5_SET_RAW; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET5_SET_TITLE; payload: IndexedPayload<string> }\r\n\t| { type: EAction.DATASET5_SET_LABEL; payload: string };\r\n","export const randomColor = (): string => {\r\n\tlet color: string = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n\tif (color.length !== 7) {\r\n\t\tfor (let i = color.length; i < 7; i++) {\r\n\t\t\tcolor += \"0\";\r\n\t\t}\r\n\t}\r\n\treturn color;\r\n};\r\n","import {\r\n\tDataSet1,\r\n\tDataSet2,\r\n\tDataSet3,\r\n\tDataSet4,\r\n\tDataSet5,\r\n} from \"../../../types/dataset\";\r\nimport { randomColor } from \"./randomColor\";\r\n\r\nconst genRandomNumbers = (amount: number): { raw: string; array: number[] } => {\r\n\tlet returnValue: { raw: string; array: number[] } = { raw: \"\", array: [] };\r\n\r\n\tfor (let i = 0; i < amount; i++) {\r\n\t\tlet randomNumber = Math.floor(Math.random() * 100) + 1;\r\n\t\treturnValue.raw += randomNumber.toString() + \",\";\r\n\t\treturnValue.array.push(randomNumber);\r\n\t}\r\n\r\n\treturn returnValue;\r\n};\r\n\r\nexport const RandomDataset = (\r\n\ttype: 1 | 2 | 3 | 4 | 5\r\n): DataSet1[] | DataSet2[] | DataSet3 | DataSet4[] | DataSet5 => {\r\n\tswitch (type) {\r\n\t\tcase 1:\r\n\t\t\tlet valueForDataset1 = genRandomNumbers(10);\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Example\",\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\traw: valueForDataset1.raw,\r\n\t\t\t\t\tarray: valueForDataset1.array,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\tcase 2:\r\n\t\t\tlet valueForDataset2 = genRandomNumbers(3);\r\n\t\t\tlet dataset2: DataSet2[] = [];\r\n\t\t\tfor (let i = 0; i <= 2; i++) {\r\n\t\t\t\tdataset2.push({\r\n\t\t\t\t\tlabel: \"Example\" + (i + 1),\r\n\t\t\t\t\traw: valueForDataset2.array[i],\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn dataset2;\r\n\t\tcase 3:\r\n\t\t\tlet valueForDataset3 = genRandomNumbers(20);\r\n\t\t\tlet dataset3: DataSet3 = {\r\n\t\t\t\tcolor: randomColor(),\r\n\t\t\t\tarray: valueForDataset3.array,\r\n\t\t\t\traw: valueForDataset3.raw,\r\n\t\t\t\tlabel: \"Example\",\r\n\t\t\t};\r\n\t\t\treturn dataset3;\r\n\t\tcase 4:\r\n\t\t\tlet valueForDataset4 = {\r\n\t\t\t\tx: genRandomNumbers(10),\r\n\t\t\t\ty: genRandomNumbers(10),\r\n\t\t\t};\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Example\",\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\trawX: valueForDataset4.x.raw,\r\n\t\t\t\t\tarrayX: valueForDataset4.x.array,\r\n\t\t\t\t\trawY: valueForDataset4.y.raw,\r\n\t\t\t\t\tarrayY: valueForDataset4.y.array,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\tcase 5:\r\n\t\t\tlet valueForDataset5: Array<{\r\n\t\t\t\tcolor: string;\r\n\t\t\t\traw: string;\r\n\t\t\t\tarray: number[];\r\n\t\t\t\tlabel: string;\r\n\t\t\t}> = [];\r\n\t\t\tfor (let i = 0; i < 2; i++) {\r\n\t\t\t\tlet data = genRandomNumbers(4);\r\n\t\t\t\tvalueForDataset5.push({\r\n\t\t\t\t\traw: data.raw,\r\n\t\t\t\t\tarray: data.array,\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\tlabel: \"Example\" + i,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tlabels: \"Example1,Example2,Example3,Example4,Example5\",\r\n\t\t\t\tdatasets: valueForDataset5,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn [];\r\n\t}\r\n};\r\n","import { RandomDataset } from \"../../shared/utils/dataGeneration/exampleData\";\r\nimport { DataSet1, DataSet2, DataSet3, DataSet4, DataSet5 } from \"../dataset\";\r\n\r\nexport type State = {\r\n\tselectedChart: number;\r\n\tchartStyle: number;\r\n\r\n\tdataSet1: Array<DataSet1>;\r\n\tdataSet2: Array<DataSet2>;\r\n\tdataSet3: DataSet3;\r\n\tdataSet4: Array<DataSet4>;\r\n\tdataSet5: DataSet5;\r\n};\r\n\r\nexport const initialState: State = {\r\n\tselectedChart: 0,\r\n\r\n\tchartStyle: 0,\r\n\r\n\tdataSet1: RandomDataset(1) as DataSet1[],\r\n\tdataSet2: RandomDataset(2) as DataSet2[],\r\n\tdataSet3: RandomDataset(3) as DataSet3,\r\n\tdataSet4: RandomDataset(4) as DataSet4[],\r\n\tdataSet5: RandomDataset(5) as DataSet5,\r\n};\r\n","import {\r\n\tDataSet2,\r\n\tDataSet1,\r\n\tDataSet4,\r\n\tDataSet3,\r\n\tDataSet5,\r\n} from \"../../../types/dataset\";\r\nimport { Action, EAction } from \"../../../types/store/actions\";\r\nimport { State } from \"../../../types/store/state\";\r\nimport { RandomDataset } from \"../../utils/dataGeneration/exampleData\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tswitch (action.type) {\r\n\t\tcase EAction.SELECTEDCHART_SET:\r\n\t\t\tswitch (action.payload) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tselectedChart: action.payload,\r\n\t\t\t\t\t\tdataSet1: RandomDataset(1) as DataSet1[],\r\n\t\t\t\t\t};\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tselectedChart: action.payload,\r\n\t\t\t\t\t\tdataSet4: RandomDataset(4) as DataSet4[],\r\n\t\t\t\t\t};\r\n\t\t\t\tcase 2:\r\n\t\t\t\tcase 3:\r\n\t\t\t\tcase 4:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tselectedChart: action.payload,\r\n\t\t\t\t\t\tdataSet2: RandomDataset(2) as DataSet2[],\r\n\t\t\t\t\t};\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tselectedChart: action.payload,\r\n\t\t\t\t\t\tdataSet3: RandomDataset(3) as DataSet3,\r\n\t\t\t\t\t};\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tselectedChart: action.payload,\r\n\t\t\t\t\t\tdataSet5: RandomDataset(5) as DataSet5,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\nimport { State } from \"../../../types/store/state\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tswitch (action.type) {\r\n\t\tcase EAction.CHARTSTYLE_SET:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchartStyle: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","export const textToNumberArray = (input: string): Array<number> => {\r\n\tlet returnValue: Array<number> = [];\r\n\r\n\t//Sanitize text\r\n\r\n\tlet sanitizedInput: string = \"\";\r\n\r\n\tfor (let i = 0; i < input.length; i++) {\r\n\t\tlet val = input[i];\r\n\t\tif (\r\n\t\t\t(val === \",\" || val === \".\" || val === \"-\" || !isNaN(Number(val))) &&\r\n\t\t\t!(val === \",\" && sanitizedInput[sanitizedInput.length - 1] === val)\r\n\t\t) {\r\n\t\t\tsanitizedInput += val;\r\n\t\t}\r\n\t}\r\n\r\n\t//Transform to array\r\n\r\n\tconst splitedText: Array<string> = sanitizedInput.split(\",\");\r\n\tfor (let i = 0; i < splitedText.length; i++) {\r\n\t\tconst candidateNumber = Number(splitedText[i]);\r\n\r\n\t\tif (!isNaN(candidateNumber)) {\r\n\t\t\treturnValue.push(candidateNumber);\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnValue;\r\n};\r\n\r\nexport const textToTextArray = (input: string) => {\r\n\treturn input.split(\",\");\r\n};\r\n\r\nexport const arrayToText = (input: Array<any>) => {\r\n\tlet returnValue: string = \"\";\r\n\tfor (let i = 0; i < input.length; i++) {\r\n\t\treturnValue += String(input[i]) + \",\";\r\n\t}\r\n\treturn returnValue;\r\n};\r\n\r\nexport const sanitizeText = (input: string): string => {\r\n\tlet returnValue: string = \"\";\r\n\tfor (let i = 0; i < input.length; i++) {\r\n\t\tlet val = input[i];\r\n\t\tif (val === \",\" || val === \".\" || val === \"-\" || !isNaN(Number(val))) {\r\n\t\t\treturnValue += val;\r\n\t\t}\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","const letters = [\r\n\t\"X\",\r\n\t\"Y\",\r\n\t\"Z\",\r\n\t\"P\",\r\n\t\"Q\",\r\n\t\"R\",\r\n\t\"S\",\r\n\t\"A\",\r\n\t\"B\",\r\n\t\"C\",\r\n\t\"D\",\r\n\t\"E\",\r\n\t\"F\",\r\n\t\"G\",\r\n\t\"H\",\r\n\t\"I\",\r\n\t\"J\",\r\n\t\"K\",\r\n\t\"M\",\r\n\t\"N\",\r\n\t\"L\",\r\n\t\"O\",\r\n\t\"P\",\r\n\t\"Q\",\r\n\t\"R\",\r\n\t\"S\",\r\n\t\"V\",\r\n\t\"O\",\r\n\t\"W\",\r\n\t\"X\",\r\n\t\"Y\",\r\n\t\"Z\",\r\n];\r\nexport const newLabel = (length: number): string => {\r\n\tif (length < letters.length) {\r\n\t\treturn letters[length];\r\n\t} else {\r\n\t\treturn letters[Math.floor(Math.random() * (letters.length - 0 + 1) + 0)];\r\n\t}\r\n};\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\nimport { State } from \"../../../types/store/state\";\r\nimport { sanitizeText, textToNumberArray } from \"../../utils/convertions\";\r\nimport { newLabel } from \"../../utils/dataGeneration/newLabel\";\r\nimport { randomColor } from \"../../utils/dataGeneration/randomColor\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tlet clone = [...state.dataSet1];\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET1_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet1: [],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET1_ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet1: [\r\n\t\t\t\t\t...state.dataSet1,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: newLabel(state.dataSet1.length),\r\n\t\t\t\t\t\traw: \"\",\r\n\t\t\t\t\t\tarray: [],\r\n\t\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET1_REMOVE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet1: state.dataSet1\r\n\t\t\t\t\t.slice(0, action.payload)\r\n\t\t\t\t\t.concat(...state.dataSet1.slice(action.payload + 1)),\r\n\t\t\t};\r\n\t\tcase EAction.DATASET1_SET_LABEL:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tlabel: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet1: clone };\r\n\t\tcase EAction.DATASET1_SET_RAW:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\traw: sanitizeText(action.payload.data),\r\n\t\t\t\tarray: textToNumberArray(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet1: clone };\r\n\t\tcase EAction.DATASET1_SET_COLOR:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tcolor: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet1: clone };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\nimport { State } from \"../../../types/store/state\";\r\nimport { newLabel } from \"../../utils/dataGeneration/newLabel\";\r\nimport { randomColor } from \"../../utils/dataGeneration/randomColor\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tlet clone = [...state.dataSet2];\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET2_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet2: [],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET2_ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet2: [\r\n\t\t\t\t\t...state.dataSet2,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: newLabel(state.dataSet2.length),\r\n\t\t\t\t\t\traw: 0,\r\n\t\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET2_REMOVE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet2: state.dataSet2\r\n\t\t\t\t\t.slice(0, action.payload)\r\n\t\t\t\t\t.concat(...state.dataSet2.slice(action.payload + 1)),\r\n\t\t\t};\r\n\t\tcase EAction.DATASET2_SET_LABEL:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tlabel: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet2: clone };\r\n\t\tcase EAction.DATASET2_SET_VALUE:\r\n\t\t\t//Pie/Doughnut chart does not accept negative values\r\n\t\t\tif (state.selectedChart === 3 || state.selectedChart === 4) {\r\n\t\t\t\tif (action.payload.data.includes(\"-\")) {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\traw: Number(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet2: clone };\r\n\t\tcase EAction.DATASET2_SET_COLOR:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tcolor: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet2: clone };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\nimport { State } from \"../../../types/store/state\";\r\nimport { sanitizeText, textToNumberArray } from \"../../utils/convertions\";\r\nimport { randomColor } from \"../../utils/dataGeneration/randomColor\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET3_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet3: {\r\n\t\t\t\t\tlabel: \"X\",\r\n\t\t\t\t\traw: \"\",\r\n\t\t\t\t\tarray: [],\r\n\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET3_SET_LABEL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet3: {\r\n\t\t\t\t\t...state.dataSet3,\r\n\t\t\t\t\tlabel: action.payload,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET3_SET_RAW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet3: {\r\n\t\t\t\t\t...state.dataSet3,\r\n\t\t\t\t\traw: sanitizeText(action.payload),\r\n\t\t\t\t\tarray: textToNumberArray(action.payload),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET3_SET_COLOR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet3: {\r\n\t\t\t\t\t...state.dataSet3,\r\n\t\t\t\t\tcolor: action.payload,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\nimport { State } from \"../../../types/store/state\";\r\nimport { sanitizeText, textToNumberArray } from \"../../utils/convertions\";\r\nimport { newLabel } from \"../../utils/dataGeneration/newLabel\";\r\nimport { randomColor } from \"../../utils/dataGeneration/randomColor\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tlet clone = [...state.dataSet4];\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET4_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet4: [],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET4_ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet4: [\r\n\t\t\t\t\t...state.dataSet4,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: newLabel(state.dataSet4.length),\r\n\t\t\t\t\t\trawX: \"\",\r\n\t\t\t\t\t\trawY: \"\",\r\n\t\t\t\t\t\tarrayX: [],\r\n\t\t\t\t\t\tarrayY: [],\r\n\t\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\tcase EAction.DATASET4_REMOVE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet4: state.dataSet4\r\n\t\t\t\t\t.slice(0, action.payload)\r\n\t\t\t\t\t.concat(...state.dataSet4.slice(action.payload + 1)),\r\n\t\t\t};\r\n\t\tcase EAction.DATASET4_SET_LABEL:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tlabel: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet4: clone };\r\n\t\tcase EAction.DATASET4_SET_RAWX:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\trawX: sanitizeText(action.payload.data),\r\n\t\t\t\tarrayX: textToNumberArray(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet4: clone };\r\n\t\tcase EAction.DATASET4_SET_RAWY:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\trawY: sanitizeText(action.payload.data),\r\n\t\t\t\tarrayY: textToNumberArray(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet4: clone };\r\n\t\tcase EAction.DATASET4_SET_COLOR:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tcolor: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet4: clone };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\nimport { State } from \"../../../types/store/state\";\r\nimport { textToNumberArray } from \"../../utils/convertions\";\r\nimport { newLabel } from \"../../utils/dataGeneration/newLabel\";\r\nimport { randomColor } from \"../../utils/dataGeneration/randomColor\";\r\n\r\nconst Reducer = (state: State, action: Action): State => {\r\n\tlet clone = [...state.dataSet5.datasets];\r\n\tswitch (action.type) {\r\n\t\tcase EAction.DATASET5_CLEAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet5: { ...state.dataSet5, datasets: [] },\r\n\t\t\t};\r\n\t\tcase EAction.DATASET5_ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet5: {\r\n\t\t\t\t\t...state.dataSet5,\r\n\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t...state.dataSet5.datasets,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: randomColor(),\r\n\t\t\t\t\t\t\traw: \"\",\r\n\t\t\t\t\t\t\tarray: [],\r\n\t\t\t\t\t\t\tlabel: newLabel(state.dataSet5.datasets.length),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET5_REMOVE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet5: {\r\n\t\t\t\t\t...state.dataSet5,\r\n\t\t\t\t\tdatasets: state.dataSet5.datasets\r\n\t\t\t\t\t\t.slice(0, action.payload)\r\n\t\t\t\t\t\t.concat(...state.dataSet5.datasets.slice(action.payload + 1)),\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET5_SET_LABEL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdataSet5: {\r\n\t\t\t\t\t...state.dataSet5,\r\n\t\t\t\t\tlabels: action.payload,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase EAction.DATASET5_SET_RAW:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\traw: action.payload.data,\r\n\t\t\t\tarray: textToNumberArray(action.payload.data),\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet5: { ...state.dataSet5, datasets: clone } };\r\n\t\tcase EAction.DATASET5_SET_COLOR:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tcolor: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet5: { ...state.dataSet5, datasets: clone } };\r\n\t\tcase EAction.DATASET5_SET_TITLE:\r\n\t\t\tclone[action.payload.index] = {\r\n\t\t\t\t...clone[action.payload.index],\r\n\t\t\t\tlabel: action.payload.data,\r\n\t\t\t};\r\n\t\t\treturn { ...state, dataSet5: { ...state.dataSet5, datasets: clone } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import selectedChart from \"./selectedChart/reducer\";\r\nimport chartStyle from \"./chartStyle/reducer\";\r\nimport dataSet1 from \"./dataSet1/reducer\";\r\nimport dataSet2 from \"./dataSet2/reducer\";\r\nimport dataSet3 from \"./dataSet3/reducer\";\r\nimport dataSet4 from \"./dataSet4/reducer\";\r\nimport dataSet5 from \"./dataSet5/reducer\";\r\nimport { State } from \"../../types/store/state\";\r\nimport { Action, EAction } from \"../../types/store/actions\";\r\n\r\nconst RootReducer = (state: State, action: Action): State => {\r\n\tswitch (action.type) {\r\n\t\tcase EAction.SELECTEDCHART_SET:\r\n\t\t\treturn selectedChart(state, action);\r\n\r\n\t\tcase EAction.CHARTSTYLE_SET:\r\n\t\t\treturn chartStyle(state, action);\r\n\r\n\t\tcase EAction.DATASET1_CLEAR:\r\n\t\tcase EAction.DATASET1_ADD:\r\n\t\tcase EAction.DATASET1_REMOVE:\r\n\t\tcase EAction.DATASET1_SET_LABEL:\r\n\t\tcase EAction.DATASET1_SET_RAW:\r\n\t\tcase EAction.DATASET1_SET_COLOR:\r\n\t\t\treturn dataSet1(state, action);\r\n\r\n\t\tcase EAction.DATASET2_CLEAR:\r\n\t\tcase EAction.DATASET2_ADD:\r\n\t\tcase EAction.DATASET2_REMOVE:\r\n\t\tcase EAction.DATASET2_SET_LABEL:\r\n\t\tcase EAction.DATASET2_SET_VALUE:\r\n\t\tcase EAction.DATASET2_SET_COLOR:\r\n\t\t\treturn dataSet2(state, action);\r\n\r\n\t\tcase EAction.DATASET3_CLEAR:\r\n\t\tcase EAction.DATASET3_SET_LABEL:\r\n\t\tcase EAction.DATASET3_SET_RAW:\r\n\t\tcase EAction.DATASET3_SET_COLOR:\r\n\t\t\treturn dataSet3(state, action);\r\n\r\n\t\tcase EAction.DATASET4_ADD:\r\n\t\tcase EAction.DATASET4_CLEAR:\r\n\t\tcase EAction.DATASET4_REMOVE:\r\n\t\tcase EAction.DATASET4_SET_LABEL:\r\n\t\tcase EAction.DATASET4_SET_RAWX:\r\n\t\tcase EAction.DATASET4_SET_RAWY:\r\n\t\tcase EAction.DATASET4_SET_COLOR:\r\n\t\t\treturn dataSet4(state, action);\r\n\r\n\t\tcase EAction.DATASET5_CLEAR:\r\n\t\tcase EAction.DATASET5_ADD:\r\n\t\tcase EAction.DATASET5_REMOVE:\r\n\t\tcase EAction.DATASET5_SET_RAW:\r\n\t\tcase EAction.DATASET5_SET_COLOR:\r\n\t\tcase EAction.DATASET5_SET_LABEL:\r\n\t\tcase EAction.DATASET5_SET_TITLE:\r\n\t\t\treturn dataSet5(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default RootReducer;\r\n","import { createContext, useReducer } from \"react\";\r\nimport { initialState } from \"../../types/store/state\";\r\nimport Reducer from \"./reducer\";\r\n\r\nconst Store = (props: { children?: any }) => {\r\n\tconst [state, dispatch] = useReducer(Reducer, initialState);\r\n\treturn (\r\n\t\t<Context.Provider value={[state, dispatch]}>\r\n\t\t\t{props.children}\r\n\t\t</Context.Provider>\r\n\t);\r\n};\r\n\r\nexport const Context = createContext<any>(initialState);\r\nexport default Store;\r\n","import \"./style.scss\";\r\nconst Button = (props: {\r\n\tchildren: any;\r\n\tvariant?: \"common\";\r\n\tm?: number;\r\n\tmr?: number;\r\n\tml?: number;\r\n\tmb?: number;\r\n\tmt?: number;\r\n\tonClick?: any;\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmargin: props.m,\r\n\t\t\t\tmarginRight: props.mr,\r\n\t\t\t\tmarginLeft: props.ml,\r\n\t\t\t\tmarginBottom: props.mb,\r\n\t\t\t\tmarginTop: props.mt,\r\n\t\t\t}}\r\n\t\t\tclassName={\"button\"}\r\n\t\t\tonClick={props.onClick}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import { icon } from \"../../types/icons\";\r\n\r\ninterface chart {\r\n\ticon: icon;\r\n\tname: string;\r\n}\r\n\r\nconst charList: Array<chart> = [\r\n\t{ icon: \"Plot\", name: \"Plot\" },\r\n\t{ icon: \"ScatterPlot\", name: \"Scatter Plot\" },\r\n\t{ icon: \"Bar\", name: \"Bar chart\" },\r\n\t{ icon: \"Pie\", name: \"Pie Chart\" },\r\n\t{ icon: \"Doughnut\", name: \"Doughnut\" },\r\n\t{ icon: \"Histogram\", name: \"Histogram\" },\r\n\t{ icon: \"Radar\", name: \"Radar\" },\r\n\t{ icon: \"Polar\", name: \"Polar\" },\r\n];\r\n\r\nexport default charList;\r\n","import { useContext } from \"react\";\r\nimport Button from \"../../shared/components/Button\";\r\nimport charList from \"../../shared/constants/chartsList\";\r\nimport { Context } from \"../../shared/store\";\r\nimport { DonwloadCanvas } from \"../../shared/utils/downloadCanvas\";\r\nimport { State } from \"../../types/store/state\";\r\n\r\nimport \"./style.scss\";\r\nconst ChartHeader = () => {\r\n\tconst [state] = useContext<[State]>(Context);\r\n\r\n\treturn (\r\n\t\t<div className=\"fr chart-header\">\r\n\t\t\t<div>\r\n\t\t\t\t<h3>{charList[state.selectedChart].name}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"fr\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tmr={10}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tDonwloadCanvas();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave image\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartHeader;\r\n","const DonwloadCanvas = () => {\r\n\tvar link = document.createElement(\"a\");\r\n\tlink.download = \"mygraph-\" + Math.floor(Date.now() / 1000) + \".png\";\r\n\tlink.href = document.getElementsByTagName(\"canvas\")[0]!.toDataURL();\r\n\tlink.click();\r\n};\r\n\r\nexport { DonwloadCanvas };\r\n","import { useEffect, useState } from \"react\";\r\nimport { icon } from \"../../../types/icons\";\r\nimport \"./style.scss\";\r\n\r\nconst Icon = (props: { name: icon }) => {\r\n\tconst [icon, setIcon] = useState<any>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst dinamicImport = async () => {\r\n\t\t\tswitch (props.name) {\r\n\t\t\t\tcase \"Bar\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Bar.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Histogram\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Histogram.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Pie\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Pie.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Plot\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Plot.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ScatterPlot\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Scatter Plot.svg\"))\r\n\t\t\t\t\t\t\t.default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Doughnut\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Doughnut.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Cross\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Cross.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Tick\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Tick.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Delete\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Delete.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Edit\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Edit.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Polar\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Polar.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Radar\":\r\n\t\t\t\t\tsetIcon(\r\n\t\t\t\t\t\tawait (await import(\"../../../assets/images/Radar.svg\")).default\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\t\tdinamicImport();\r\n\t}, [icon, props.name]);\r\n\r\n\treturn (\r\n\t\t<div className=\"icon\">\r\n\t\t\t{icon !== null ? <img alt=\"Icon\" src={icon} /> : <></>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\ninterface props {\r\n\tplaceholder?: string;\r\n\tvalue?: string;\r\n\tonChange(e: React.ChangeEvent<HTMLInputElement>): any;\r\n\tclassName?: any;\r\n\tm?: number;\r\n\tmr?: number;\r\n\tml?: number;\r\n\tmb?: number;\r\n\tmt?: number;\r\n\tw?: string;\r\n}\r\n\r\nconst Input = (props: props) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tstyle={{\r\n\t\t\t\tmargin: props.m,\r\n\t\t\t\tmarginRight: props.mr,\r\n\t\t\t\tmarginLeft: props.ml,\r\n\t\t\t\tmarginBottom: props.mb,\r\n\t\t\t\tmarginTop: props.mt,\r\n\t\t\t\twidth: props.w,\r\n\t\t\t}}\r\n\t\t\tclassName={\"input \"}\r\n\t\t\tplaceholder={props.placeholder}\r\n\t\t\tvalue={props.value}\r\n\t\t\tonChange={props.onChange}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../Button\";\r\nimport Icon from \"../Icon\";\r\nimport Input from \"../Input\";\r\nimport \"./style.scss\";\r\ninterface props {\r\n\tvalue: string;\r\n\tonChange: (data: string) => void;\r\n}\r\n\r\nconst EditableText = (props: props) => {\r\n\tconst [editing, setEditing] = useState(false);\r\n\tconst [tempText, setTempText] = useState(props.value);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTempText(props.value);\r\n\t}, [props.value, editing]);\r\n\r\n\tconst handleChangeTempText = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetTempText(e.target.value);\r\n\t};\r\n\r\n\tconst handleConfirmChanges = () => {\r\n\t\tprops.onChange(tempText);\r\n\t\tsetEditing(false);\r\n\t};\r\n\r\n\tconst handleSwitchEditingMode = () => {\r\n\t\tsetEditing(!editing);\r\n\t};\r\n\r\n\treturn editing ? (\r\n\t\t<div className=\"editable-text-editing\">\r\n\t\t\t<div className=\"editable-text-editing-left\">\r\n\t\t\t\t<Input w={\"100%\"} value={tempText} onChange={handleChangeTempText} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"editable-text-editing-right\">\r\n\t\t\t\t<Button onClick={handleConfirmChanges} mr={5}>\r\n\t\t\t\t\t<Icon name=\"Tick\" />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button onClick={handleSwitchEditingMode}>\r\n\t\t\t\t\t<Icon name=\"Cross\" />\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"editable-text-idle\">\r\n\t\t\t<div>{props.value}</div>\r\n\t\t\t<Button onClick={handleSwitchEditingMode}>\r\n\t\t\t\t<Icon name=\"Edit\" />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditableText;\r\n","import EditableText from \"../../EditableText\";\r\nimport Input from \"../../Input\";\r\nimport \"../../../../assets/sass/dataset-input.scss\";\r\n\r\ninterface ILeftSide1Props {\r\n\tdata: { label: string; raw: any; color: string };\r\n\thandleOnChangeLabel: (data: string) => void;\r\n\thandleOnChangeInput: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const DataSetInputLeftSide1 = (props: ILeftSide1Props) => {\r\n\treturn (\r\n\t\t<div className=\"dataset-input-inner-left\">\r\n\t\t\t<EditableText\r\n\t\t\t\tvalue={props.data.label}\r\n\t\t\t\tonChange={props.handleOnChangeLabel}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tvalue={props.data.raw}\r\n\t\t\t\tonChange={props.handleOnChangeInput}\r\n\t\t\t\tplaceholder=\"value1, value2, value3 ...\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import Button from \"../Button\";\r\nimport \"./style.scss\";\r\n\r\nconst Modal = (props: {\r\n\tchildren: JSX.Element;\r\n\tonClose: any;\r\n\ttitle: string;\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"modal-wrapper\">\r\n\t\t\t<div className=\"modal-interior\">\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<div className=\"modal-content-header\">\r\n\t\t\t\t\t\t<div>{props.title}</div>\r\n\t\t\t\t\t\t<Button onClick={props.onClose}>X</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\nimport Modal from \"../components/Modal/index\";\r\n\r\nconst useModal = (content: JSX.Element, title: string) => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tconst openModal = () => {\r\n\t\tsetIsOpen(true);\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\treturn {\r\n\t\tisOpen,\r\n\t\topenModal,\r\n\t\tcloseModal,\r\n\t\tComponent: ModalWrapper(content, isOpen, closeModal, title),\r\n\t};\r\n};\r\n\r\nexport default useModal;\r\n\r\nconst ModalWrapper = (\r\n\tcontent: JSX.Element,\r\n\tisOpen: boolean,\r\n\tonClose: any,\r\n\ttitle: string\r\n) =>\r\n\tisOpen ? (\r\n\t\t<Modal title={title} onClose={onClose}>\r\n\t\t\t{content}\r\n\t\t</Modal>\r\n\t) : (\r\n\t\t<></>\r\n\t);\r\n","import React from \"react\";\r\nimport { ColorResult, SketchPicker } from \"react-color\";\r\nimport useModal from \"../../hooks/useModal\";\r\nimport Button from \"../Button\";\r\n\r\ninterface props {\r\n\tvalue: string;\r\n\thandleOnChangeColor: (color: string) => void;\r\n}\r\n\r\nconst ColorPicker = (props: props) => {\r\n\tconst handleOnChange = (\r\n\t\tcolor: ColorResult,\r\n\t\tevent: React.ChangeEvent<HTMLInputElement>\r\n\t) => {\r\n\t\tprops.handleOnChangeColor(color.hex);\r\n\t};\r\n\r\n\tconst Modal = useModal(\r\n\t\t<SketchPicker color={props.value} onChange={handleOnChange} />,\r\n\t\t\"Color picker\"\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button onClick={Modal.openModal}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborder: \"1px solid white\",\r\n\t\t\t\t\t\twidth: 15,\r\n\t\t\t\t\t\theight: 15,\r\n\t\t\t\t\t\tbackgroundColor: props.value,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Button>\r\n\t\t\t{Modal.Component}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ColorPicker;\r\n","import Button from \"../../Button\";\r\nimport ColorPicker from \"../../ColorPicker\";\r\nimport Icon from \"../../Icon\";\r\nimport \"../../../../assets/sass/dataset-input.scss\";\r\n\r\ninterface IRightSideProps {\r\n\thandleOnChangeColor: (color: string) => void;\r\n\thandleOnDeleteDataset?: () => void;\r\n\tdata: { color: string };\r\n}\r\n\r\nexport const DataSetInputRightSide = (props: IRightSideProps) => {\r\n\treturn (\r\n\t\t<div className=\"dataset-input-inner-right\">\r\n\t\t\t<ColorPicker\r\n\t\t\t\tvalue={props.data.color}\r\n\t\t\t\thandleOnChangeColor={props.handleOnChangeColor}\r\n\t\t\t/>\r\n\t\t\t{props.handleOnDeleteDataset && (\r\n\t\t\t\t<Button onClick={props.handleOnDeleteDataset}>\r\n\t\t\t\t\t<Icon name=\"Delete\" />\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import \"../../../../assets/sass/dataset-input.scss\";\r\nconst Container = (props: { children: JSX.Element[] }) => {\r\n\treturn <div className=\"dataset-input\">{props.children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { selectedChart } from \"./selectedChart/actions\";\r\nimport { chartStyle } from \"./chartStyle/actions\";\r\nimport { dataSet1 } from \"./dataSet1/actions\";\r\nimport { dataSet2 } from \"./dataSet2/actions\";\r\nimport { dataSet3 } from \"./dataSet3/actions\";\r\nimport { dataSet4 } from \"./dataSet4/actions\";\r\nimport { dataSet5 } from \"./dataSet5/actions\";\r\n\r\nconst Actions = {\r\n\tselectedChart,\r\n\tchartStyle,\r\n\tdataSet1,\r\n\tdataSet2,\r\n\tdataSet3,\r\n\tdataSet4,\r\n\tdataSet5,\r\n};\r\nexport default Actions;\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\n\r\nconst selectedChart = {\r\n\tset: (index: number): Action => ({\r\n\t\ttype: EAction.SELECTEDCHART_SET,\r\n\t\tpayload: index,\r\n\t}),\r\n};\r\n\r\nexport { selectedChart };\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\n\r\nconst chartStyle = {\r\n\tset: (index: number): Action => ({\r\n\t\ttype: EAction.CHARTSTYLE_SET,\r\n\t\tpayload: index,\r\n\t}),\r\n};\r\n\r\nexport { chartStyle };\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\n\r\nexport const dataSet1 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET1_CLEAR, payload: null }),\r\n\tadd: (): Action => ({ type: EAction.DATASET1_ADD, payload: null }),\r\n\tremove: (index: number): Action => ({\r\n\t\ttype: EAction.DATASET1_REMOVE,\r\n\t\tpayload: index,\r\n\t}),\r\n\tsetLabel: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET1_SET_LABEL,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetRaw: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET1_SET_RAW,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetColor: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET1_SET_COLOR,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n};\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\n\r\nexport const dataSet2 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET2_CLEAR, payload: null }),\r\n\tadd: (): Action => ({ type: EAction.DATASET2_ADD, payload: null }),\r\n\tremove: (index: number): Action => ({\r\n\t\ttype: EAction.DATASET2_REMOVE,\r\n\t\tpayload: index,\r\n\t}),\r\n\tsetLabel: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET2_SET_LABEL,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetValue: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET2_SET_VALUE,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetColor: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET2_SET_COLOR,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n};\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\n\r\nexport const dataSet3 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET2_CLEAR, payload: null }),\r\n\tsetLabel: (data: string): Action => ({\r\n\t\ttype: EAction.DATASET3_SET_LABEL,\r\n\t\tpayload: data,\r\n\t}),\r\n\tsetRaw: (data: string): Action => ({\r\n\t\ttype: EAction.DATASET3_SET_RAW,\r\n\t\tpayload: data,\r\n\t}),\r\n\tsetColor: (data: string): Action => ({\r\n\t\ttype: EAction.DATASET3_SET_COLOR,\r\n\t\tpayload: data,\r\n\t}),\r\n};\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\n\r\nexport const dataSet4 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET4_CLEAR, payload: null }),\r\n\tadd: (): Action => ({ type: EAction.DATASET4_ADD, payload: null }),\r\n\tremove: (index: number): Action => ({\r\n\t\ttype: EAction.DATASET4_REMOVE,\r\n\t\tpayload: index,\r\n\t}),\r\n\tsetLabel: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET4_SET_LABEL,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetRawX: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET4_SET_RAWX,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetRawY: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET4_SET_RAWY,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\r\n\tsetColor: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET4_SET_COLOR,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n};\r\n","import { Action, EAction } from \"../../../types/store/actions\";\r\n\r\nexport const dataSet5 = {\r\n\tclear: (): Action => ({ type: EAction.DATASET5_CLEAR, payload: null }),\r\n\tadd: (): Action => ({ type: EAction.DATASET5_ADD, payload: null }),\r\n\tremove: (index: number): Action => ({\r\n\t\ttype: EAction.DATASET5_REMOVE,\r\n\t\tpayload: index,\r\n\t}),\r\n\tsetLabel: (data: string): Action => ({\r\n\t\ttype: EAction.DATASET5_SET_LABEL,\r\n\t\tpayload: data,\r\n\t}),\r\n\tsetRaw: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET5_SET_RAW,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetTitle: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET5_SET_TITLE,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n\tsetColor: (index: number, data: string): Action => ({\r\n\t\ttype: EAction.DATASET5_SET_COLOR,\r\n\t\tpayload: { index, data },\r\n\t}),\r\n};\r\n","import { DataSetInputLeftSide1 } from \"./layouts/LeftSide1\";\r\nimport { DataSetInputRightSide } from \"./layouts/RightSide1\";\r\nimport Container from \"./layouts/Container\";\r\nimport { DataSet1 } from \"../../../types/dataset\";\r\nimport Actions from \"../../store/actions\";\r\nimport { Action } from \"../../../types/store/actions\";\r\n\r\ninterface props {\r\n\tdata: DataSet1;\r\n\tindex: number;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet1Input = (props: props) => {\r\n\tconst handleOnChangeLabel = (data: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet1.setLabel(props.index, data));\r\n\t};\r\n\r\n\tconst handleOnChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.dispatcher(Actions.dataSet1.setRaw(props.index, e.target.value));\r\n\t};\r\n\r\n\tconst handleOnChangeColor = (color: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet1.setColor(props.index, color));\r\n\t};\r\n\r\n\tconst handleOnDeleteDataset = () => {\r\n\t\tprops.dispatcher(Actions.dataSet1.remove(props.index));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide1\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeInput={handleOnChangeInput}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeColor={handleOnChangeColor}\r\n\t\t\t\thandleOnDeleteDataset={handleOnDeleteDataset}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default DataSet1Input;\r\n","import { DataSet2 } from \"../../../types/dataset\";\r\nimport { Action } from \"../../../types/store/actions\";\r\nimport Actions from \"../../store/actions\";\r\nimport Container from \"./layouts/Container\";\r\nimport { DataSetInputLeftSide1 } from \"./layouts/LeftSide1\";\r\nimport { DataSetInputRightSide } from \"./layouts/RightSide1\";\r\n\r\ninterface props {\r\n\tdata: DataSet2;\r\n\tindex: number;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet2Input = (props: props) => {\r\n\tconst handleOnChangeLabel = (data: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet2.setLabel(props.index, data));\r\n\t};\r\n\r\n\tconst handleOnChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.dispatcher(Actions.dataSet2.setValue(props.index, e.target.value));\r\n\t};\r\n\r\n\tconst handleOnChangeColor = (color: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet2.setColor(props.index, color));\r\n\t};\r\n\r\n\tconst handleOnDeleteDataset = () => {\r\n\t\tprops.dispatcher(Actions.dataSet2.remove(props.index));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide1\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t\thandleOnChangeInput={handleOnChangeInput}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeColor={handleOnChangeColor}\r\n\t\t\t\thandleOnDeleteDataset={handleOnDeleteDataset}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default DataSet2Input;\r\n","import { DataSet3 } from \"../../../types/dataset\";\r\nimport { Action } from \"../../../types/store/actions\";\r\nimport Actions from \"../../store/actions\";\r\nimport Container from \"./layouts/Container\";\r\nimport { DataSetInputLeftSide1 } from \"./layouts/LeftSide1\";\r\nimport { DataSetInputRightSide } from \"./layouts/RightSide1\";\r\n\r\ninterface props {\r\n\tdata: DataSet3;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet3Input = (props: props) => {\r\n\tconst handleOnChangeLabel = (data: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet3.setLabel(data));\r\n\t};\r\n\r\n\tconst handleOnChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.dispatcher(Actions.dataSet3.setRaw(e.target.value));\r\n\t};\r\n\r\n\tconst handleOnChangeColor = (color: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet3.setColor(color));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide1\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t\thandleOnChangeInput={handleOnChangeInput}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeColor={handleOnChangeColor}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default DataSet3Input;\r\n","import EditableText from \"../../EditableText\";\r\nimport Input from \"../../Input\";\r\nimport \"../../../../assets/sass/dataset-input.scss\";\r\n\r\ninterface ILeftSide2Props {\r\n\tdata: { label: string; rawX: any; rawY: any; color: string };\r\n\thandleOnChangeLabel: (data: string) => void;\r\n\thandleOnChangeInput: (\r\n\t\te: React.ChangeEvent<HTMLInputElement>,\r\n\t\ttype: \"RAWX\" | \"RAWY\"\r\n\t) => void;\r\n}\r\n\r\nexport const DataSetInputLeftSide2 = (props: ILeftSide2Props) => {\r\n\treturn (\r\n\t\t<div className=\"dataset-input-inner-left\">\r\n\t\t\t<EditableText\r\n\t\t\t\tvalue={props.data.label}\r\n\t\t\t\tonChange={props.handleOnChangeLabel}\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tvalue={props.data.rawX}\r\n\t\t\t\tonChange={(e) => props.handleOnChangeInput(e, \"RAWX\")}\r\n\t\t\t\tplaceholder=\"value1, value2, value3 ...\"\r\n\t\t\t/>\r\n\t\t\t<Input\r\n\t\t\t\tvalue={props.data.rawY}\r\n\t\t\t\tonChange={(e) => props.handleOnChangeInput(e, \"RAWY\")}\r\n\t\t\t\tplaceholder=\"value1, value2, value3 ...\"\r\n\t\t\t\tmb={10}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { DataSet4 } from \"../../../types/dataset\";\r\nimport { Action } from \"../../../types/store/actions\";\r\nimport Actions from \"../../store/actions\";\r\nimport Container from \"./layouts/Container\";\r\nimport { DataSetInputLeftSide2 } from \"./layouts/LeftSide2\";\r\nimport { DataSetInputRightSide } from \"./layouts/RightSide1\";\r\n\r\ninterface props {\r\n\tdata: DataSet4;\r\n\tindex: number;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet4Input = (props: props) => {\r\n\tconst handleOnChangeLabel = (data: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet4.setLabel(props.index, data));\r\n\t};\r\n\r\n\tconst handleOnChangeInput = (\r\n\t\te: React.ChangeEvent<HTMLInputElement>,\r\n\t\ttype: \"RAWX\" | \"RAWY\"\r\n\t) => {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"RAWX\":\r\n\t\t\t\tprops.dispatcher(Actions.dataSet4.setRawX(props.index, e.target.value));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"RAWY\":\r\n\t\t\t\tprops.dispatcher(Actions.dataSet4.setRawY(props.index, e.target.value));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleOnChangeColor = (color: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet4.setColor(props.index, color));\r\n\t};\r\n\r\n\tconst handleOnDeleteDataset = () => {\r\n\t\tprops.dispatcher(Actions.dataSet4.remove(props.index));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide2\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t\thandleOnChangeInput={handleOnChangeInput}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeColor={handleOnChangeColor}\r\n\t\t\t\thandleOnDeleteDataset={handleOnDeleteDataset}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default DataSet4Input;\r\n","import React from \"react\";\r\nimport { DataSet3 } from \"../../../types/dataset\";\r\nimport { Action } from \"../../../types/store/actions\";\r\nimport Actions from \"../../store/actions\";\r\nimport Container from \"./layouts/Container\";\r\nimport { DataSetInputLeftSide1 } from \"./layouts/LeftSide1\";\r\nimport { DataSetInputRightSide } from \"./layouts/RightSide1\";\r\n\r\ninterface props {\r\n\tdata: DataSet3;\r\n\tindex: number;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet5Input = (props: props) => {\r\n\tconst handleOnChangeLabel = (data: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet5.setTitle(props.index, data));\r\n\t};\r\n\r\n\tconst handleOnChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.dispatcher(Actions.dataSet5.setRaw(props.index, e.target.value));\r\n\t};\r\n\r\n\tconst handleOnChangeColor = (color: string) => {\r\n\t\tprops.dispatcher(Actions.dataSet5.setColor(props.index, color));\r\n\t};\r\n\r\n\tconst handleOnDeleteDataset = () => {\r\n\t\tprops.dispatcher(Actions.dataSet5.remove(props.index));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide1\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeInput={handleOnChangeInput}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeColor={handleOnChangeColor}\r\n\t\t\t\thandleOnDeleteDataset={handleOnDeleteDataset}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default DataSet5Input;\r\n","import Input from \"../../Input\";\r\nimport \"../../../../assets/sass/dataset-input.scss\";\r\nimport React from \"react\";\r\n\r\ninterface ILeftSide3Props {\r\n\tdata: string;\r\n\thandleOnChangeLabel: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const DataSetInputLeftSide3 = (props: ILeftSide3Props) => {\r\n\treturn (\r\n\t\t<div className=\"dataset-input-inner-left\">\r\n\t\t\t<Input value={props.data} onChange={props.handleOnChangeLabel} />\r\n\t\t</div>\r\n\t);\r\n};\r\n","import \"../../../../assets/sass/dataset-input.scss\";\r\n\r\nexport const DataSetInputRightSide2 = () => {\r\n\treturn <div className=\"dataset-input-inner-right\"></div>;\r\n};\r\n","import { Action } from \"../../../types/store/actions\";\r\nimport Actions from \"../../store/actions\";\r\nimport Container from \"./layouts/Container\";\r\nimport { DataSetInputLeftSide3 } from \"./layouts/LeftSide3\";\r\nimport { DataSetInputRightSide2 } from \"./layouts/RightSide2\";\r\n\r\ninterface props {\r\n\tdata: string;\r\n\tdispatcher: (action: Action) => {};\r\n}\r\n\r\nconst DataSet5TitleInput = (props: props) => {\r\n\tconst handleOnChangeLabel = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.dispatcher(Actions.dataSet5.setLabel(e.target.value));\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<DataSetInputLeftSide3\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\thandleOnChangeLabel={handleOnChangeLabel}\r\n\t\t\t/>\r\n\t\t\t<DataSetInputRightSide2 />\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default DataSet5TitleInput;\r\n","import { useContext } from \"react\";\r\nimport Button from \"../../shared/components/Button\";\r\nimport DataSet1Input from \"../../shared/components/DataSetInput/DataSet1\";\r\nimport DataSet2Input from \"../../shared/components/DataSetInput/DataSet2\";\r\nimport DataSet3Input from \"../../shared/components/DataSetInput/DataSet3\";\r\nimport DataSet4Input from \"../../shared/components/DataSetInput/DataSet4\";\r\nimport DataSet5Input from \"../../shared/components/DataSetInput/DataSet5\";\r\nimport DataSet5TitleInput from \"../../shared/components/DataSetInput/DataSet5Title\";\r\nimport { Context } from \"../../shared/store\";\r\nimport Actions from \"../../shared/store/actions\";\r\nimport { Action } from \"../../types/store/actions\";\r\nimport { State } from \"../../types/store/state\";\r\n\r\nexport const PlotInputs = () => {\r\n\tconst [state, dispatcher] = useContext<[State, (action: Action) => {}]>(\r\n\t\tContext\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ marginTop: 5, marginBottom: 5 }}>Datasets:</div>\r\n\t\t\t<Button onClick={() => dispatcher(Actions.dataSet1.add())}>\r\n\t\t\t\tAdd dataset\r\n\t\t\t</Button>\r\n\t\t\t{state.dataSet1.map((dataset, index) => (\r\n\t\t\t\t<DataSet1Input data={dataset} dispatcher={dispatcher} index={index} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const ScatterInputs = () => {\r\n\tconst [state, dispatcher] = useContext<[State, (action: Action) => {}]>(\r\n\t\tContext\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ marginTop: 5, marginBottom: 5 }}>Datasets:</div>\r\n\t\t\t<Button onClick={() => dispatcher(Actions.dataSet4.add())}>\r\n\t\t\t\tAdd dataset\r\n\t\t\t</Button>\r\n\t\t\t{state.dataSet4.map((dataset, index) => (\r\n\t\t\t\t<DataSet4Input data={dataset} dispatcher={dispatcher} index={index} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const BarPieInputs = () => {\r\n\tconst [state, dispatcher] = useContext<[State, (action: Action) => {}]>(\r\n\t\tContext\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ marginTop: 5, marginBottom: 5 }}>Datasets:</div>\r\n\t\t\t<Button onClick={() => dispatcher(Actions.dataSet2.add())}>\r\n\t\t\t\tAdd dataset\r\n\t\t\t</Button>\r\n\t\t\t{state.dataSet2.map((dataset, index) => (\r\n\t\t\t\t<DataSet2Input data={dataset} index={index} dispatcher={dispatcher} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const HistogramInputs = () => {\r\n\tconst [state, dispatcher] = useContext<[State, (action: Action) => {}]>(\r\n\t\tContext\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ marginTop: 5, marginBottom: 5 }}>Data:</div>\r\n\t\t\t<DataSet3Input dispatcher={dispatcher} data={state.dataSet3} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const RadarInputs = () => {\r\n\tconst [state, dispatcher] = useContext<[State, (action: Action) => {}]>(\r\n\t\tContext\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ marginTop: 5, marginBottom: 5 }}>Labels:</div>\r\n\t\t\t<DataSet5TitleInput\r\n\t\t\t\tdata={state.dataSet5.labels}\r\n\t\t\t\tdispatcher={dispatcher}\r\n\t\t\t/>\r\n\t\t\t<div style={{ marginTop: 30, marginBottom: 5 }}>Datasets:</div>\r\n\t\t\t<Button onClick={() => dispatcher(Actions.dataSet5.add())}>\r\n\t\t\t\tAdd dataset\r\n\t\t\t</Button>\r\n\r\n\t\t\t{state.dataSet5.datasets.map((dataset, index) => (\r\n\t\t\t\t<DataSet5Input data={dataset} dispatcher={dispatcher} index={index} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tBarPieInputs,\r\n\tHistogramInputs,\r\n\tPlotInputs,\r\n\tRadarInputs,\r\n\tScatterInputs,\r\n} from \"../../ChartEditor/ChartInputs/setups\";\r\nimport { State } from \"../../types/store/state\";\r\nimport { Context } from \"../store\";\r\n\r\nconst useSelectInput = () => {\r\n\tconst [input, setInput] = useState(<></>);\r\n\tconst [state] = useContext<[State]>(Context);\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (state.selectedChart) {\r\n\t\t\tcase 0:\r\n\t\t\t\tsetInput(<PlotInputs />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tsetInput(<ScatterInputs />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\tcase 7:\r\n\t\t\t\tsetInput(<BarPieInputs />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tsetInput(<HistogramInputs />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tsetInput(<RadarInputs />);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}, [state.selectedChart]);\r\n\r\n\treturn input;\r\n};\r\n\r\nexport default useSelectInput;\r\n","import useSelectInput from \"../../shared/hooks/useSelectInput\";\r\nimport \"./style.scss\";\r\n\r\nconst ChartInputs = () => {\r\n\tconst InputComponent = useSelectInput();\r\n\treturn <div className=\"chart-inputs\">{InputComponent}</div>;\r\n};\r\n\r\nexport default ChartInputs;\r\n","import { DataSet2 } from \"../../../types/dataset\";\r\n\r\nexport const adapter3 = (input: Array<DataSet2>) => {\r\n\tconst labels: Array<string> = [];\r\n\tconst data: Array<number> = [];\r\n\tconst colors: Array<string> = [];\r\n\tinput.forEach((dataset) => {\r\n\t\tlabels.push(dataset.label);\r\n\t\tdata.push(dataset.raw);\r\n\t\tcolors.push(dataset.color);\r\n\t});\r\n\r\n\treturn {\r\n\t\tlabels,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"\",\r\n\t\t\t\tdata,\r\n\t\t\t\tbackgroundColor: colors,\r\n\t\t\t\thoverOffset: 4,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n};\r\n","import { DataSet4 } from \"../../../types/dataset\";\r\n\r\ntype dataset = {\r\n\tlabel: string;\r\n\tdata: Array<{ x: number; y: number }>;\r\n\tbackgroundColor: string;\r\n};\r\n\r\nexport const adapter4 = (input: Array<DataSet4>) => {\r\n\tlet dataArray: Array<dataset> = [];\r\n\r\n\tinput.forEach((dataset) => {\r\n\t\tdataArray.push({\r\n\t\t\tlabel: dataset.label,\r\n\t\t\tbackgroundColor: dataset.color,\r\n\t\t\tdata: createPoints(dataset.arrayX, dataset.arrayY),\r\n\t\t});\r\n\t});\r\n\r\n\treturn { datasets: dataArray };\r\n};\r\n\r\nconst createPoints = (\r\n\tx: Array<number>,\r\n\ty: Array<number>\r\n): Array<{ x: number; y: number }> => {\r\n\tlet returnValue: Array<{ x: number; y: number }> = [];\r\n\tx.forEach((xvalue, index) => {\r\n\t\treturnValue.push({\r\n\t\t\tx: xvalue,\r\n\t\t\ty: y[index],\r\n\t\t});\r\n\t});\r\n\treturn returnValue;\r\n};\r\n","import { DataSet3 } from \"../../../types/dataset\";\r\n\r\nexport const adapter5 = (input: DataSet3) => {\r\n\tif (input.array.length === 0) {\r\n\t\treturn emptyDataset;\r\n\t}\r\n\r\n\tlet maxValue = 0;\r\n\tlet minValue: number | undefined = undefined;\r\n\tlet range = 0;\r\n\tlet numberOfIntervals = 0;\r\n\tlet intervalsWidth = 0;\r\n\r\n\tinput.array.forEach((value) => {\r\n\t\tif (value > maxValue) {\r\n\t\t\tmaxValue = value;\r\n\t\t}\r\n\t\tif (!minValue || value < minValue) {\r\n\t\t\tminValue = value;\r\n\t\t}\r\n\t});\r\n\r\n\trange = maxValue - minValue!;\r\n\tnumberOfIntervals = Math.floor(Math.sqrt(input.array.length));\r\n\r\n\tintervalsWidth = range / numberOfIntervals;\r\n\r\n\tlet ranges: Array<{ min: number; max: number; count: number }> = [];\r\n\tfor (let i = 0; i < numberOfIntervals; i++) {\r\n\t\tranges.push({\r\n\t\t\tmin: minValue! + i * intervalsWidth,\r\n\t\t\tmax:\r\n\t\t\t\tminValue! +\r\n\t\t\t\ti * intervalsWidth +\r\n\t\t\t\tintervalsWidth -\r\n\t\t\t\t(i === numberOfIntervals - 1 ? 0 : 1),\r\n\t\t\tcount: 0,\r\n\t\t});\r\n\t}\r\n\r\n\tinput.array.forEach((value) => {\r\n\t\tranges.forEach((range, index) => {\r\n\t\t\tif (value >= range.min && value <= range.max) {\r\n\t\t\t\tranges[index].count = ranges[index].count + 1;\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tconst labels = ranges.map((range) =>\r\n\t\tString(Math.round(range.min) + \" - \" + Math.round(range.max))\r\n\t);\r\n\treturn {\r\n\t\tdata: {\r\n\t\t\tlabels: labels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: input.label,\r\n\t\t\t\t\tdata: ranges.map((range) => range.count),\r\n\t\t\t\t\tbackgroundColor: input.color,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\toptions: {\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbarPercentage: 1.25,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tyAxes: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\t\tmin: undefined,\r\n\t\t\t\t\t\t\tmax: undefined,\r\n\t\t\t\t\t\t\tstepSize: undefined,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst emptyDataset = {\r\n\tdata: { labels: [], datasets: [] },\r\n\toptions: {},\r\n};\r\n","import { adapter1 } from \"./adapter1\";\r\nimport { adapter2 } from \"./adapter2\";\r\nimport { adapter3 } from \"./adapter3\";\r\nimport { adapter4 } from \"./adapter4\";\r\nimport { adapter5 } from \"./adapter5\";\r\nimport { adapter6 } from \"./adapter6\";\r\nimport { minAndMaxBar } from \"./minAndMaxBar\";\r\n\r\nconst ChartAdapters = {\r\n\tLine: adapter1,\r\n\tBar: { adapter: adapter2, scale: minAndMaxBar },\r\n\tPie: adapter3,\r\n\tDoughnut: adapter3,\r\n\tScatterPlot: adapter4,\r\n\tHistogram: adapter5,\r\n\tRadar: adapter6,\r\n};\r\n\r\nexport default ChartAdapters;\r\n","import { DataSet1 } from \"../../../types/dataset\";\r\n\r\ntype dataset = {\r\n\tlabel: string;\r\n\tdata: Array<number>;\r\n\tfill: boolean;\r\n\tborderColor: string;\r\n\ttension: number;\r\n};\r\n\r\nexport const adapter1 = (data: Array<DataSet1>) => {\r\n\tlet datasets: Array<dataset> = [];\r\n\tlet labels: Array<string> = [];\r\n\tlet amountOfLabels = 0;\r\n\r\n\tdata.forEach((dataset) => {\r\n\t\tdatasets.push({\r\n\t\t\tlabel: dataset.label,\r\n\t\t\tdata: dataset.array,\r\n\t\t\tfill: false,\r\n\t\t\tborderColor: dataset.color,\r\n\t\t\ttension: 0.1,\r\n\t\t});\r\n\t\tif (dataset.array.length > amountOfLabels) {\r\n\t\t\tamountOfLabels = dataset.array.length;\r\n\t\t}\r\n\t});\r\n\r\n\tfor (let i = 0; i <= amountOfLabels; i++) {\r\n\t\tlabels.push(\"\");\r\n\t}\r\n\r\n\treturn { labels, datasets };\r\n};\r\n","import { DataSet2 } from \"../../../types/dataset\";\r\n\r\nexport const adapter2 = (input: Array<DataSet2>) => {\r\n\tconst labels: Array<string> = [];\r\n\tconst data: Array<number> = [];\r\n\tconst color: Array<string> = [];\r\n\tinput.forEach((dataset) => {\r\n\t\tlabels.push(dataset.label);\r\n\t\tdata.push(dataset.raw);\r\n\t\tcolor.push(dataset.color);\r\n\t});\r\n\treturn {\r\n\t\tlabels,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"\",\r\n\t\t\t\tdata,\r\n\t\t\t\tbackgroundColor: color,\r\n\t\t\t\tborderColor: color,\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n};\r\n","import { DataSet2 } from \"../../../types/dataset\";\r\n\r\nexport const minAndMaxBar = (input: DataSet2[]) => {\r\n\tlet min = 0,\r\n\t\tmax = 0;\r\n\r\n\tinput.forEach((dataset) => {\r\n\t\tif (dataset.raw < min) {\r\n\t\t\tmin = dataset.raw;\r\n\t\t}\r\n\t\tif (dataset.raw > max) {\r\n\t\t\tmax = dataset.raw;\r\n\t\t}\r\n\t});\r\n\r\n\treturn {\r\n\t\tmin: Math.floor(min - min / 5),\r\n\t\tmax: max + Math.floor(max / 10),\r\n\t\tstepSize: Math.floor(max / 10),\r\n\t};\r\n};\r\n","import { DataSet5 } from \"../../../types/dataset\";\r\nimport { textToTextArray } from \"../convertions\";\r\n\r\nexport const adapter6 = (input: DataSet5) => {\r\n\tlet datasets: {\r\n\t\tlabel: string;\r\n\t\tdata: number[];\r\n\t\tfill: true;\r\n\t\tbackgroundColor: string;\r\n\t\tborderColor: string;\r\n\t\tpointBackgroundColor: string;\r\n\t}[] = [];\r\n\tinput.datasets.forEach((dataset) => {\r\n\t\tdatasets.push({\r\n\t\t\tlabel: dataset.label,\r\n\t\t\tdata: dataset.array,\r\n\t\t\tfill: true,\r\n\t\t\tbackgroundColor: dataset.color + \"33\",\r\n\t\t\tborderColor: dataset.color,\r\n\t\t\tpointBackgroundColor: dataset.color,\r\n\t\t});\r\n\t});\r\n\treturn {\r\n\t\tlabels: textToTextArray(input.labels),\r\n\t\tdatasets: datasets,\r\n\t};\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Context } from \"../store\";\r\nimport {\r\n\tLine,\r\n\tScatter,\r\n\tPie,\r\n\tBar,\r\n\tDoughnut,\r\n\tPolar,\r\n\tRadar,\r\n} from \"react-chartjs-2\";\r\nimport ChartAdapters from \"../utils/chartAdapters\";\r\nimport { State } from \"../../types/store/state\";\r\n\r\nconst useSelectChart = () => {\r\n\tconst [chart, setChart] = useState(<></>);\r\n\tconst [state] = useContext<[State]>(Context);\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (state.selectedChart) {\r\n\t\t\tcase 0:\r\n\t\t\t\tsetChart(<Line data={ChartAdapters.Line(state.dataSet1)} />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tsetChart(<Scatter data={ChartAdapters.ScatterPlot(state.dataSet4)} />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tsetChart(\r\n\t\t\t\t\t<Bar\r\n\t\t\t\t\t\tdata={ChartAdapters.Bar.adapter(state.dataSet2)}\r\n\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\tscales: {\r\n\t\t\t\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\t\t\t\t\t\tticks: ChartAdapters.Bar.scale(state.dataSet2),\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tsetChart(<Pie data={ChartAdapters.Pie(state.dataSet2)} />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tsetChart(<Doughnut data={ChartAdapters.Doughnut(state.dataSet2)} />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tlet chartParameters = ChartAdapters.Histogram(state.dataSet3);\r\n\t\t\t\tsetChart(\r\n\t\t\t\t\t<Bar data={chartParameters.data} options={chartParameters.options} />\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tsetChart(<Radar data={ChartAdapters.Radar(state.dataSet5)} />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tsetChart(\r\n\t\t\t\t\t<Polar\r\n\t\t\t\t\t\tdata={ChartAdapters.Doughnut(state.dataSet2)}\r\n\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\tscale: {\r\n\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}, [\r\n\t\tstate.selectedChart,\r\n\t\tstate.dataSet1,\r\n\t\tstate.dataSet2,\r\n\t\tstate.dataSet3,\r\n\t\tstate.dataSet4,\r\n\t\tstate.dataSet5,\r\n\t]);\r\n\r\n\treturn chart;\r\n};\r\n\r\nexport default useSelectChart;\r\n","import useSelectChart from \"../../shared/hooks/useSelectChart\";\r\nimport \"./style.scss\";\r\n\r\nconst ChartVisualize = () => {\r\n\tconst Chart = useSelectChart();\r\n\treturn <div className=\"chart-visualize\">{Chart}</div>;\r\n};\r\nexport default ChartVisualize;\r\n","export default __webpack_public_path__ + \"static/media/Logo.0a4ab6d3.svg\";","import ChartHeader from \"./ChartHeader\";\r\nimport ChartInputs from \"./ChartInputs\";\r\nimport ChartVisualize from \"./ChartVisualize\";\r\nimport \"./style.scss\";\r\nimport logo from \"../assets/images/Logo.svg\";\r\nconst ChartEditor = () => {\r\n\treturn (\r\n\t\t<div className=\"chart-editor\">\r\n\t\t\t<img\r\n\t\t\t\tsrc={logo}\r\n\t\t\t\talt=\"logo\"\r\n\t\t\t\tstyle={{ marginTop: 20 }}\r\n\t\t\t\tclassName=\"chart-logo\"\r\n\t\t\t/>\r\n\t\t\t<ChartHeader />\r\n\t\t\t<ChartVisualize />\r\n\t\t\t<ChartInputs />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartEditor;\r\n","import { useContext } from \"react\";\r\nimport { Context } from \"../../shared/store\";\r\nimport Actions from \"../../shared/store/actions\";\r\nimport { Action } from \"../../types/store/actions\";\r\nimport { State } from \"../../types/store/state\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ChartSelector = (props: {\r\n\ticon: JSX.Element;\r\n\tname: string;\r\n\tindex: number;\r\n}) => {\r\n\tconst [state, dispatch] = useContext<[State, (action: Action) => State]>(\r\n\t\tContext\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={() => {\r\n\t\t\t\tdispatch(Actions.selectedChart.set(props.index));\r\n\t\t\t}}\r\n\t\t\tclassName={\r\n\t\t\t\tstate.selectedChart === props.index\r\n\t\t\t\t\t? \"chart-selector chart-selector-selected\"\r\n\t\t\t\t\t: \"chart-selector\"\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<div className=\"chart-selector-icon\">{props.icon}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartSelector;\r\n","import Icon from \"../shared/components/Icon\";\r\nimport charList from \"../shared/constants/chartsList\";\r\nimport ChartSelector from \"./ChartSelector\";\r\nimport \"./style.scss\";\r\n\r\nconst ChartList = () => {\r\n\treturn (\r\n\t\t<div className=\"chart-list\">\r\n\t\t\t{charList.map((chart, index) => (\r\n\t\t\t\t<ChartSelector\r\n\t\t\t\t\tname={chart.name}\r\n\t\t\t\t\tindex={index}\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\ticon={<Icon name={chart.icon} />}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartList;\r\n","import { useState } from \"react\";\r\nimport ChartEditor from \"./ChartEditor\";\r\nimport ChartList from \"./ChartList\";\r\n\r\nconst App = () => {\r\n\tconst [loading] = useState(false);\r\n\r\n\treturn loading ? (\r\n\t\t<div>Loading</div>\r\n\t) : (\r\n\t\t<div className=\"fr\">\r\n\t\t\t<ChartList />\r\n\t\t\t<ChartEditor />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport Store from \"./shared/store\";\n\nimport \"./assets/sass/flex.scss\";\nimport App from \"./app\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Store>\n\t\t\t<App />\n\t\t</Store>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//afrobull naruto\n"],"sourceRoot":""}